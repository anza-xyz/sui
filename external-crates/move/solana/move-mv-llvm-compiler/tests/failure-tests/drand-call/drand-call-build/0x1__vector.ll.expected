; ModuleID = '0x1__vector'
source_filename = "../../../../../../../crates/sui-framework/packages/move-stdlib/sources/vector.move"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "sbf-solana-solana"

%__move_rt_type = type { { ptr, i64 }, i64, ptr }

@__move_rttydesc_signer = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_signer_name, i64 6 }, i64 9, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_signer_name = private unnamed_addr constant [6 x i8] c"signer"
@__move_rttydesc_NOTHING_info = private unnamed_addr constant i8 -1

declare i32 @memcmp(ptr, ptr, i64)

define void @"0000000000000001_vector_unit_test_poiso_HU6CqYnzBgTn4E"() {
entry:
  %local_0 = alloca i64, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  store i64 0, ptr %local_0, align 8
  %loaded_alloca = load i64, ptr %local_0, align 8
  %retval = call { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64 %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_1, align 8
  call void @move_rt_vec_destroy(ptr @__move_rttydesc_signer, ptr %local_1)
  ret void
}

declare { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64)

declare ptr @move_native_vector_borrow(ptr, ptr, i64)

declare ptr @move_native_vector_borrow_mut(ptr, ptr, i64)

declare void @move_native_vector_destroy_empty(ptr, ptr)

declare { ptr, i64, i64 } @move_native_vector_empty(ptr)

declare i64 @move_native_vector_length(ptr, ptr)

declare void @move_native_vector_pop_back(ptr, ptr, ptr)

declare void @move_native_vector_push_back(ptr, ptr, ptr)

declare void @move_native_vector_swap(ptr, ptr, i64, i64)

declare void @move_rt_vec_destroy(ptr nonnull readonly dereferenceable(32), ptr)
