; ModuleID = '0x2__bcs'
source_filename = "../../../../../../../crates/sui-framework/packages/sui-framework/sources/bcs.move"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "sbf-solana-solana"

%__move_rt_type = type { { ptr, i64 }, i64, ptr }
%struct.bcs__BCS = type { { ptr, i64, i64 } }
%struct.option__Option_address_ = type { { ptr, i64, i64 } }
%struct.option__Option_bool_ = type { { ptr, i64, i64 } }
%struct.option__Option_u128_ = type { { ptr, i64, i64 } }
%struct.option__Option_u64_ = type { { ptr, i64, i64 } }
%struct.option__Option_u8_ = type { { ptr, i64, i64 } }
%struct.bcs__Info = type { i1, i8, i64, i128, { ptr, i64, i64 }, [32 x i8] }

@__move_rttydesc_signer = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_signer_name, i64 6 }, i64 9, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_signer_name = private unnamed_addr constant [6 x i8] c"signer"
@__move_rttydesc_NOTHING_info = private unnamed_addr constant i8 -1
@__move_rttydesc_u8 = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u8_name, i64 2 }, i64 2, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_u8_name = private unnamed_addr constant [2 x i8] c"u8"
@__move_rttydesc_address = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_address_name, i64 7 }, i64 8, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_address_name = private unnamed_addr constant [7 x i8] c"address"
@__move_rttydesc_bool = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_bool_name, i64 4 }, i64 1, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_bool_name = private unnamed_addr constant [4 x i8] c"bool"
@__move_rttydesc_u128 = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u128_name, i64 4 }, i64 6, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_u128_name = private unnamed_addr constant [4 x i8] c"u128"
@__move_rttydesc_u64 = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u64_name, i64 3 }, i64 5, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_u64_name = private unnamed_addr constant [3 x i8] c"u64"
@vec_literal = internal constant [0 x [32 x i8]] zeroinitializer
@vdesc = internal constant { ptr, i64, i64 } { ptr @vec_literal, i64 0, i64 0 }
@vec_literal.1 = internal constant [0 x i1] zeroinitializer
@vdesc.2 = internal constant { ptr, i64, i64 } { ptr @vec_literal.1, i64 0, i64 0 }
@vec_literal.3 = internal constant [0 x i128] zeroinitializer
@vdesc.4 = internal constant { ptr, i64, i64 } { ptr @vec_literal.3, i64 0, i64 0 }
@vec_literal.5 = internal constant [0 x i64] zeroinitializer
@vdesc.6 = internal constant { ptr, i64, i64 } { ptr @vec_literal.5, i64 0, i64 0 }
@vec_literal.7 = internal constant [0 x i8] zeroinitializer
@vdesc.8 = internal constant { ptr, i64, i64 } { ptr @vec_literal.7, i64 0, i64 0 }
@vec_literal.9 = internal constant [0 x i8] zeroinitializer
@vdesc.10 = internal constant { ptr, i64, i64 } { ptr @vec_literal.9, i64 0, i64 0 }
@__move_rttydesc_vector_u8_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u8__name, i64 10 }, i64 10, ptr @__move_rttydesc_vector_u8__info }
@__move_rttydesc_vector_u8__name = private unnamed_addr constant [10 x i8] c"vector<u8>"
@__move_rttydesc_vector_u8__info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_u8 }
@acct.addr = internal constant [32 x i8] c"\EE\FF\C0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
@vec_literal.11 = internal constant [15 x i64] zeroinitializer
@vdesc.12 = internal constant { ptr, i64, i64 } { ptr @vec_literal.11, i64 15, i64 15 }
@vec_literal.13 = internal constant [360 x i64] zeroinitializer
@vdesc.14 = internal constant { ptr, i64, i64 } { ptr @vec_literal.13, i64 360, i64 360 }
@vec_literal.15 = internal constant [4 x i1] [i1 true, i1 false, i1 true, i1 false]
@vdesc.16 = internal constant { ptr, i64, i64 } { ptr @vec_literal.15, i64 4, i64 4 }
@acct.addr.17 = internal constant [32 x i8] c"\AA\AA\AA\AA\AA\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
@vec_literal.18 = internal constant [5 x i8] c"\01\02\03\04\05"
@vdesc.19 = internal constant { ptr, i64, i64 } { ptr @vec_literal.18, i64 5, i64 5 }
@vec_literal.20 = internal constant [5 x i8] c"\01\02\03\04\05"
@vdesc.21 = internal constant { ptr, i64, i64 } { ptr @vec_literal.20, i64 5, i64 5 }
@vec_literal.22 = internal constant [5 x i64] [i64 1, i64 2, i64 3, i64 4, i64 5]
@vdesc.23 = internal constant { ptr, i64, i64 } { ptr @vec_literal.22, i64 5, i64 5 }
@vec_literal.24 = internal constant [5 x i128] [i128 1, i128 2, i128 3, i128 4, i128 5]
@vdesc.25 = internal constant { ptr, i64, i64 } { ptr @vec_literal.24, i64 5, i64 5 }
@vec_literal.26 = internal constant [4 x i1] [i1 true, i1 false, i1 true, i1 false]
@vdesc.27 = internal constant { ptr, i64, i64 } { ptr @vec_literal.26, i64 4, i64 4 }
@vec_literal.28 = internal constant [4 x [32 x i8]] [[32 x i8] zeroinitializer, [32 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [32 x i8] c"\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"]
@vdesc.29 = internal constant { ptr, i64, i64 } { ptr @vec_literal.28, i64 4, i64 4 }
@__move_rttydesc_vector_u64_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u64__name, i64 11 }, i64 10, ptr @__move_rttydesc_vector_u64__info }
@__move_rttydesc_vector_u64__name = private unnamed_addr constant [11 x i8] c"vector<u64>"
@__move_rttydesc_vector_u64__info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_u64 }
@__move_rttydesc_bcs__Info = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_bcs__Info_name, i64 75 }, i64 11, ptr @__move_rttydesc_bcs__Info_info }
@__move_rttydesc_bcs__Info_name = private unnamed_addr constant [75 x i8] c"0000000000000000000000000000000000000000000000000000000000000002::bcs::Info"
@0 = private unnamed_addr constant [1 x i8] c"a"
@1 = private unnamed_addr constant [1 x i8] c"b"
@2 = private unnamed_addr constant [1 x i8] c"c"
@3 = private unnamed_addr constant [1 x i8] c"d"
@__move_rttydesc_vector_bool__name = private unnamed_addr constant [12 x i8] c"vector<bool>"
@__move_rttydesc_vector_bool__info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_bool }
@4 = private unnamed_addr constant [1 x i8] c"k"
@5 = private unnamed_addr constant [1 x i8] c"s"
@s_fld_array = private unnamed_addr constant [6 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_bool_name, i64 4 }, i64 1, ptr @__move_rttydesc_NOTHING_info }, i64 0, { ptr, i64 } { ptr @0, i64 1 } }, { %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u8_name, i64 2 }, i64 2, ptr @__move_rttydesc_NOTHING_info }, i64 1, { ptr, i64 } { ptr @1, i64 1 } }, { %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u64_name, i64 3 }, i64 5, ptr @__move_rttydesc_NOTHING_info }, i64 8, { ptr, i64 } { ptr @2, i64 1 } }, { %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_u128_name, i64 4 }, i64 6, ptr @__move_rttydesc_NOTHING_info }, i64 16, { ptr, i64 } { ptr @3, i64 1 } }, { %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_bool__name, i64 12 }, i64 10, ptr @__move_rttydesc_vector_bool__info }, i64 32, { ptr, i64 } { ptr @4, i64 1 } }, { %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_address_name, i64 7 }, i64 8, ptr @__move_rttydesc_NOTHING_info }, i64 56, { ptr, i64 } { ptr @5, i64 1 } }]
@__move_rttydesc_bcs__Info_info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array, i64 6, i64 88, i64 8 }
@__move_rttydesc_vector_vector_u8__ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_vector_u8___name, i64 18 }, i64 10, ptr @__move_rttydesc_vector_vector_u8___info }
@__move_rttydesc_vector_vector_u8___name = private unnamed_addr constant [18 x i8] c"vector<vector<u8>>"
@__move_rttydesc_vector_vector_u8___info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_vector_u8_ }
@__move_rttydesc_vector_u128_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u128__name, i64 12 }, i64 10, ptr @__move_rttydesc_vector_u128__info }
@__move_rttydesc_vector_u128__name = private unnamed_addr constant [12 x i8] c"vector<u128>"
@__move_rttydesc_vector_u128__info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_u128 }
@__move_rttydesc_vector_bool_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_bool__name, i64 12 }, i64 10, ptr @__move_rttydesc_vector_bool__info }
@__move_rttydesc_vector_address_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_address__name, i64 15 }, i64 10, ptr @__move_rttydesc_vector_address__info }
@__move_rttydesc_vector_address__name = private unnamed_addr constant [15 x i8] c"vector<address>"
@__move_rttydesc_vector_address__info = private unnamed_addr constant { ptr } { ptr @__move_rttydesc_address }
@__move_rttydesc_option__Option_bool_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_option__Option_bool__name, i64 86 }, i64 11, ptr @__move_rttydesc_option__Option_bool__info }
@__move_rttydesc_option__Option_bool__name = private unnamed_addr constant [86 x i8] c"0000000000000000000000000000000000000000000000000000000000000001::option::Option<bool>"
@6 = private unnamed_addr constant [3 x i8] c"vec"
@s_fld_array.30 = private unnamed_addr constant [1 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_bool__name, i64 12 }, i64 10, ptr @__move_rttydesc_vector_bool__info }, i64 0, { ptr, i64 } { ptr @6, i64 3 } }]
@__move_rttydesc_option__Option_bool__info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array.30, i64 1, i64 24, i64 8 }
@__move_rttydesc_option__Option_u8_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_option__Option_u8__name, i64 84 }, i64 11, ptr @__move_rttydesc_option__Option_u8__info }
@__move_rttydesc_option__Option_u8__name = private unnamed_addr constant [84 x i8] c"0000000000000000000000000000000000000000000000000000000000000001::option::Option<u8>"
@7 = private unnamed_addr constant [3 x i8] c"vec"
@s_fld_array.31 = private unnamed_addr constant [1 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u8__name, i64 10 }, i64 10, ptr @__move_rttydesc_vector_u8__info }, i64 0, { ptr, i64 } { ptr @7, i64 3 } }]
@__move_rttydesc_option__Option_u8__info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array.31, i64 1, i64 24, i64 8 }
@__move_rttydesc_option__Option_u64_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_option__Option_u64__name, i64 85 }, i64 11, ptr @__move_rttydesc_option__Option_u64__info }
@__move_rttydesc_option__Option_u64__name = private unnamed_addr constant [85 x i8] c"0000000000000000000000000000000000000000000000000000000000000001::option::Option<u64>"
@8 = private unnamed_addr constant [3 x i8] c"vec"
@s_fld_array.32 = private unnamed_addr constant [1 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u64__name, i64 11 }, i64 10, ptr @__move_rttydesc_vector_u64__info }, i64 0, { ptr, i64 } { ptr @8, i64 3 } }]
@__move_rttydesc_option__Option_u64__info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array.32, i64 1, i64 24, i64 8 }
@__move_rttydesc_option__Option_u128_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_option__Option_u128__name, i64 86 }, i64 11, ptr @__move_rttydesc_option__Option_u128__info }
@__move_rttydesc_option__Option_u128__name = private unnamed_addr constant [86 x i8] c"0000000000000000000000000000000000000000000000000000000000000001::option::Option<u128>"
@9 = private unnamed_addr constant [3 x i8] c"vec"
@s_fld_array.33 = private unnamed_addr constant [1 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_u128__name, i64 12 }, i64 10, ptr @__move_rttydesc_vector_u128__info }, i64 0, { ptr, i64 } { ptr @9, i64 3 } }]
@__move_rttydesc_option__Option_u128__info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array.33, i64 1, i64 24, i64 8 }
@acct.addr.34 = internal constant [32 x i8] c"\EE\FF\C0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"
@__move_rttydesc_option__Option_address_ = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_option__Option_address__name, i64 89 }, i64 11, ptr @__move_rttydesc_option__Option_address__info }
@__move_rttydesc_option__Option_address__name = private unnamed_addr constant [89 x i8] c"0000000000000000000000000000000000000000000000000000000000000001::option::Option<address>"
@10 = private unnamed_addr constant [3 x i8] c"vec"
@s_fld_array.35 = private unnamed_addr constant [1 x { %__move_rt_type, i64, { ptr, i64 } }] [{ %__move_rt_type, i64, { ptr, i64 } } { %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_vector_address__name, i64 15 }, i64 10, ptr @__move_rttydesc_vector_address__info }, i64 0, { ptr, i64 } { ptr @10, i64 3 } }]
@__move_rttydesc_option__Option_address__info = private unnamed_addr constant { ptr, i64, i64, i64 } { ptr @s_fld_array.35, i64 1, i64 24, i64 8 }
@vec_literal.36 = internal constant [5 x i64] [i64 255, i64 255, i64 255, i64 255, i64 255]
@vdesc.37 = internal constant { ptr, i64, i64 } { ptr @vec_literal.36, i64 5, i64 5 }

declare i32 @memcmp(ptr, ptr, i64)

define void @"0000000000000002_bcs_unit_test_poiso_jNd5pQz4ATxE8G"() {
entry:
  %local_0 = alloca i64, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  store i64 0, ptr %local_0, align 8
  %loaded_alloca = load i64, ptr %local_0, align 8
  %retval = call { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64 %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_1, align 8
  call void @move_rt_vec_destroy(ptr @__move_rttydesc_signer, ptr %local_1)
  ret void
}

declare { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64)

define { ptr, i64, i64 } @"0000000000000002_bcs_into_remainder__ywtPgSuW7MMmdy"(%struct.bcs__BCS %0) {
entry:
  %local_0 = alloca %struct.bcs__BCS, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca %struct.bcs__BCS, align 8
  %local_3__bytes = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store %struct.bcs__BCS %0, ptr %local_0, align 8
  %srcval = load %struct.bcs__BCS, ptr %local_0, align 8
  %ext_0 = extractvalue %struct.bcs__BCS %srcval, 0
  store { ptr, i64, i64 } %ext_0, ptr %local_3__bytes, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_3__bytes, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  call void @"0000000000000001_vector_reverse_DYV9motnmmM5cs"(ptr %call_arg_0)
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_5, align 8
  %retval = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval
}

define private void @"0000000000000001_vector_reverse_DYV9motnmmM5cs"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca i64, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca ptr, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i1, align 1
  %local_10 = alloca ptr, align 8
  %local_11 = alloca i64, align 8
  %local_12 = alloca i64, align 8
  %local_13 = alloca i64, align 8
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca i1, align 1
  %local_18 = alloca ptr, align 8
  %local_19 = alloca i64, align 8
  %local_20 = alloca i64, align 8
  %local_21 = alloca i64, align 8
  %local_22 = alloca i64, align 8
  %local_23 = alloca i64, align 8
  %local_24 = alloca i64, align 8
  %local_25 = alloca i64, align 8
  %local_26 = alloca i64, align 8
  %local_27 = alloca ptr, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %load_store_tmp1 = load ptr, ptr %local_4, align 8
  store ptr %load_store_tmp1, ptr %local_5, align 8
  %loaded_alloca = load ptr, ptr %local_5, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_6, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_3, align 8
  %load_store_tmp3 = load i64, ptr %local_3, align 8
  store i64 %load_store_tmp3, ptr %local_7, align 8
  store i64 0, ptr %local_8, align 8
  %eq_src_0 = load i64, ptr %local_7, align 8
  %eq_src_1 = load i64, ptr %local_8, align 8
  %eq_dst = icmp eq i64 %eq_src_0, %eq_src_1
  store i1 %eq_dst, ptr %local_9, align 1
  %cnd = load i1, ptr %local_9, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp4 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp4, ptr %local_10, align 8
  ret void

bb_0:                                             ; preds = %entry
  store i64 0, ptr %local_11, align 8
  %load_store_tmp5 = load i64, ptr %local_11, align 8
  store i64 %load_store_tmp5, ptr %local_2, align 8
  %load_store_tmp6 = load i64, ptr %local_3, align 8
  store i64 %load_store_tmp6, ptr %local_12, align 8
  store i64 1, ptr %local_13, align 8
  %sub_src_0 = load i64, ptr %local_12, align 8
  %sub_src_1 = load i64, ptr %local_13, align 8
  %sub_dst = sub i64 %sub_src_0, %sub_src_1
  %ovfcond = icmp ugt i64 %sub_dst, %sub_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_0
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_0
  store i64 %sub_dst, ptr %local_14, align 8
  %load_store_tmp7 = load i64, ptr %local_14, align 8
  store i64 %load_store_tmp7, ptr %local_1, align 8
  br label %bb_5

bb_5:                                             ; preds = %join_bb28, %join_bb
  %load_store_tmp8 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp8, ptr %local_15, align 8
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_16, align 8
  %lt_src_0 = load i64, ptr %local_15, align 8
  %lt_src_1 = load i64, ptr %local_16, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_17, align 1
  %cnd10 = load i1, ptr %local_17, align 1
  br i1 %cnd10, label %bb_3, label %bb_2

bb_3:                                             ; preds = %bb_5
  br label %bb_4

bb_4:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_18, align 8
  %load_store_tmp12 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp12, ptr %local_19, align 8
  %load_store_tmp13 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp13, ptr %local_20, align 8
  %loaded_alloca14 = load ptr, ptr %local_18, align 8
  %loaded_alloca15 = load i64, ptr %local_19, align 8
  %loaded_alloca16 = load i64, ptr %local_20, align 8
  call void @move_native_vector_swap(ptr @__move_rttydesc_u8, ptr %loaded_alloca14, i64 %loaded_alloca15, i64 %loaded_alloca16)
  %load_store_tmp17 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp17, ptr %local_21, align 8
  store i64 1, ptr %local_22, align 8
  %add_src_0 = load i64, ptr %local_21, align 8
  %add_src_1 = load i64, ptr %local_22, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond18 = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond18, label %then_bb19, label %join_bb20

then_bb19:                                        ; preds = %bb_4
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb20:                                        ; preds = %bb_4
  store i64 %add_dst, ptr %local_23, align 8
  %load_store_tmp21 = load i64, ptr %local_23, align 8
  store i64 %load_store_tmp21, ptr %local_2, align 8
  %load_store_tmp22 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp22, ptr %local_24, align 8
  store i64 1, ptr %local_25, align 8
  %sub_src_023 = load i64, ptr %local_24, align 8
  %sub_src_124 = load i64, ptr %local_25, align 8
  %sub_dst25 = sub i64 %sub_src_023, %sub_src_124
  %ovfcond26 = icmp ugt i64 %sub_dst25, %sub_src_023
  br i1 %ovfcond26, label %then_bb27, label %join_bb28

then_bb27:                                        ; preds = %join_bb20
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb28:                                        ; preds = %join_bb20
  store i64 %sub_dst25, ptr %local_26, align 8
  %load_store_tmp29 = load i64, ptr %local_26, align 8
  store i64 %load_store_tmp29, ptr %local_1, align 8
  br label %bb_5

bb_2:                                             ; preds = %bb_5
  %load_store_tmp30 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp30, ptr %local_27, align 8
  ret void
}

declare i64 @move_native_vector_length(ptr, ptr)

declare void @move_native_vector_swap(ptr, ptr, i64, i64)

define %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %0) {
entry:
  %local_0 = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca ptr, align 8
  %local_2__bytes = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.bcs__BCS, align 8
  store { ptr, i64, i64 } %0, ptr %local_0, align 8
  store ptr %local_0, ptr %local_1, align 8
  %call_arg_0 = load ptr, ptr %local_1, align 8
  call void @"0000000000000001_vector_reverse_DYV9motnmmM5cs"(ptr %call_arg_0)
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_0, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_2__bytes, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__bytes, align 8
  %insert_0 = insertvalue %struct.bcs__BCS undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.bcs__BCS %insert_0, ptr %local_3, align 8
  %retval = load %struct.bcs__BCS, ptr %local_3, align 8
  ret %struct.bcs__BCS %retval
}

define [32 x i8] @"0000000000000002_bcs_peel_address_6ieY385GfzQPhi"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca ptr, align 8
  %local_4__bytes = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca i1, align 1
  %local_8 = alloca ptr, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca { ptr, i64, i64 }, align 8
  %local_11 = alloca i64, align 8
  %local_12 = alloca i64, align 8
  %local_13 = alloca i64, align 8
  %local_14 = alloca i1, align 1
  %local_15 = alloca ptr, align 8
  %local_16 = alloca ptr, align 8
  %local_17__bytes = alloca ptr, align 8
  %local_18 = alloca i8, align 1
  %local_19 = alloca i64, align 8
  %local_20 = alloca i64, align 8
  %local_21 = alloca i64, align 8
  %local_22 = alloca ptr, align 8
  %local_23 = alloca { ptr, i64, i64 }, align 8
  %local_24 = alloca [32 x i8], align 1
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_3, align 8
  %tmp = load ptr, ptr %local_3, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_4__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_4__bytes, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_5, align 8
  %retval1 = call i64 @"0000000000000002_address_length_85CkEAWyzLybDw"()
  store i64 %retval1, ptr %local_6, align 8
  %ge_src_0 = load i64, ptr %local_5, align 8
  %ge_src_1 = load i64, ptr %local_6, align 8
  %ge_dst = icmp uge i64 %ge_src_0, %ge_src_1
  store i1 %ge_dst, ptr %local_7, align 1
  %cnd = load i1, ptr %local_7, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp2 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp2, ptr %local_8, align 8
  store i64 0, ptr %local_9, align 8
  %call_arg_0 = load i64, ptr %local_9, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  %retval3 = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %retval3, ptr %local_10, align 8
  store i64 0, ptr %local_11, align 8
  %load_store_tmp4 = load i64, ptr %local_11, align 8
  store i64 %load_store_tmp4, ptr %local_2, align 8
  %load_store_tmp5 = load { ptr, i64, i64 }, ptr %local_10, align 8
  store { ptr, i64, i64 } %load_store_tmp5, ptr %local_1, align 8
  br label %bb_6

bb_6:                                             ; preds = %join_bb, %bb_2
  %load_store_tmp6 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp6, ptr %local_12, align 8
  %retval7 = call i64 @"0000000000000002_address_length_85CkEAWyzLybDw"()
  store i64 %retval7, ptr %local_13, align 8
  %lt_src_0 = load i64, ptr %local_12, align 8
  %lt_src_1 = load i64, ptr %local_13, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_14, align 1
  %cnd8 = load i1, ptr %local_14, align 1
  br i1 %cnd8, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_6
  br label %bb_5

bb_5:                                             ; preds = %bb_4
  store ptr %local_1, ptr %local_15, align 8
  %load_store_tmp9 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp9, ptr %local_16, align 8
  %tmp10 = load ptr, ptr %local_16, align 8
  %fld_ref11 = getelementptr inbounds %struct.bcs__BCS, ptr %tmp10, i32 0, i32 0
  store ptr %fld_ref11, ptr %local_17__bytes, align 8
  %loaded_alloca12 = load ptr, ptr %local_17__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca12, ptr %local_18)
  %loaded_alloca13 = load ptr, ptr %local_15, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca13, ptr %local_18)
  %load_store_tmp14 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp14, ptr %local_19, align 8
  store i64 1, ptr %local_20, align 8
  %add_src_0 = load i64, ptr %local_19, align 8
  %add_src_1 = load i64, ptr %local_20, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_5
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_5
  store i64 %add_dst, ptr %local_21, align 8
  %load_store_tmp15 = load i64, ptr %local_21, align 8
  store i64 %load_store_tmp15, ptr %local_2, align 8
  br label %bb_6

bb_3:                                             ; preds = %bb_6
  %load_store_tmp16 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp16, ptr %local_22, align 8
  %load_store_tmp17 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp17, ptr %local_23, align 8
  %retval18 = call [32 x i8] @move_native_address_from_bytes(ptr %local_23)
  store [32 x i8] %retval18, ptr %local_24, align 1
  %retval19 = load [32 x i8], ptr %local_24, align 1
  ret [32 x i8] %retval19
}

declare i64 @"0000000000000002_address_length_85CkEAWyzLybDw"()

declare { ptr, i64, i64 } @move_native_vector_empty(ptr)

declare void @move_native_vector_pop_back(ptr, ptr, ptr)

declare void @move_native_vector_push_back(ptr, ptr, ptr)

declare [32 x i8] @move_native_address_from_bytes(ptr)

define i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i1, align 1
  %local_2 = alloca i8, align 1
  %local_3 = alloca ptr, align 8
  %local_4 = alloca i8, align 1
  %local_5 = alloca i8, align 1
  %local_6 = alloca i8, align 1
  %local_7 = alloca i1, align 1
  %local_8 = alloca i1, align 1
  %local_9 = alloca i8, align 1
  %local_10 = alloca i8, align 1
  %local_11 = alloca i1, align 1
  %local_12 = alloca i64, align 8
  %local_13 = alloca i1, align 1
  %local_14 = alloca i1, align 1
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_3, align 8
  %call_arg_0 = load ptr, ptr %local_3, align 8
  %retval = call i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr %call_arg_0)
  store i8 %retval, ptr %local_4, align 1
  %load_store_tmp1 = load i8, ptr %local_4, align 1
  store i8 %load_store_tmp1, ptr %local_2, align 1
  %load_store_tmp2 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp2, ptr %local_5, align 1
  store i8 0, ptr %local_6, align 1
  %eq_src_0 = load i8, ptr %local_5, align 1
  %eq_src_1 = load i8, ptr %local_6, align 1
  %eq_dst = icmp eq i8 %eq_src_0, %eq_src_1
  store i1 %eq_dst, ptr %local_7, align 1
  %cnd = load i1, ptr %local_7, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  store i1 false, ptr %local_8, align 1
  %load_store_tmp3 = load i1, ptr %local_8, align 1
  store i1 %load_store_tmp3, ptr %local_1, align 1
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp4 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp4, ptr %local_9, align 1
  store i8 1, ptr %local_10, align 1
  %eq_src_05 = load i8, ptr %local_9, align 1
  %eq_src_16 = load i8, ptr %local_10, align 1
  %eq_dst7 = icmp eq i8 %eq_src_05, %eq_src_16
  store i1 %eq_dst7, ptr %local_11, align 1
  %cnd8 = load i1, ptr %local_11, align 1
  br i1 %cnd8, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_0
  br label %bb_5

bb_3:                                             ; preds = %bb_0
  store i64 1, ptr %local_12, align 8
  %call_arg_09 = load i64, ptr %local_12, align 8
  call void @move_rt_abort(i64 %call_arg_09)
  unreachable

bb_5:                                             ; preds = %bb_4
  store i1 true, ptr %local_13, align 1
  %load_store_tmp10 = load i1, ptr %local_13, align 1
  store i1 %load_store_tmp10, ptr %local_1, align 1
  br label %bb_2

bb_2:                                             ; preds = %bb_5, %bb_1
  %load_store_tmp11 = load i1, ptr %local_1, align 1
  store i1 %load_store_tmp11, ptr %local_14, align 1
  %retval12 = load i1, ptr %local_14, align 1
  ret i1 %retval12
}

define i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2__bytes = alloca ptr, align 8
  %local_3 = alloca i64, align 8
  %local_4 = alloca i64, align 8
  %local_5 = alloca i1, align 1
  %local_6 = alloca ptr, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca ptr, align 8
  %local_9__bytes = alloca ptr, align 8
  %local_10 = alloca i8, align 1
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %tmp = load ptr, ptr %local_1, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_2__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_2__bytes, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_3, align 8
  store i64 1, ptr %local_4, align 8
  %ge_src_0 = load i64, ptr %local_3, align 8
  %ge_src_1 = load i64, ptr %local_4, align 8
  %ge_dst = icmp uge i64 %ge_src_0, %ge_src_1
  store i1 %ge_dst, ptr %local_5, align 1
  %cnd = load i1, ptr %local_5, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_6, align 8
  store i64 0, ptr %local_7, align 8
  %call_arg_0 = load i64, ptr %local_7, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  %load_store_tmp2 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp2, ptr %local_8, align 8
  %tmp3 = load ptr, ptr %local_8, align 8
  %fld_ref4 = getelementptr inbounds %struct.bcs__BCS, ptr %tmp3, i32 0, i32 0
  store ptr %fld_ref4, ptr %local_9__bytes, align 8
  %loaded_alloca5 = load ptr, ptr %local_9__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca5, ptr %local_10)
  %retval6 = load i8, ptr %local_10, align 1
  ret i8 %retval6
}

define %struct.option__Option_address_ @"0000000000000002_bcs_peel_option_add_3CPk1XLtV1YCnh"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.option__Option_address_, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca i1, align 1
  %local_4 = alloca ptr, align 8
  %local_5 = alloca [32 x i8], align 1
  %local_6 = alloca %struct.option__Option_address_, align 8
  %local_7 = alloca ptr, align 8
  %local_8 = alloca %struct.option__Option_address_, align 8
  %local_9 = alloca %struct.option__Option_address_, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_2, align 8
  %call_arg_0 = load ptr, ptr %local_2, align 8
  %retval = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0)
  store i1 %retval, ptr %local_3, align 1
  %cnd = load i1, ptr %local_3, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_4, align 8
  %call_arg_02 = load ptr, ptr %local_4, align 8
  %retval3 = call [32 x i8] @"0000000000000002_bcs_peel_address_6ieY385GfzQPhi"(ptr %call_arg_02)
  store [32 x i8] %retval3, ptr %local_5, align 1
  %call_arg_04 = load [32 x i8], ptr %local_5, align 1
  %retval5 = call %struct.option__Option_address_ @"0000000000000001_option_some_CDdPcTrWutT5hX"([32 x i8] %call_arg_04)
  store %struct.option__Option_address_ %retval5, ptr %local_6, align 8
  %load_store_tmp6 = load %struct.option__Option_address_, ptr %local_6, align 8
  store %struct.option__Option_address_ %load_store_tmp6, ptr %local_1, align 8
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp7 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp7, ptr %local_7, align 8
  %retval8 = call %struct.option__Option_address_ @"0000000000000001_option_none_85Lm9pYFBW1PXV"()
  store %struct.option__Option_address_ %retval8, ptr %local_8, align 8
  %load_store_tmp9 = load %struct.option__Option_address_, ptr %local_8, align 8
  store %struct.option__Option_address_ %load_store_tmp9, ptr %local_1, align 8
  br label %bb_2

bb_2:                                             ; preds = %bb_0, %bb_1
  %retval10 = load %struct.option__Option_address_, ptr %local_1, align 8
  ret %struct.option__Option_address_ %retval10
}

define private %struct.option__Option_address_ @"0000000000000001_option_some_CDdPcTrWutT5hX"([32 x i8] %0) {
entry:
  %local_0 = alloca [32 x i8], align 1
  %local_1 = alloca [32 x i8], align 1
  %local_2__vec = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.option__Option_address_, align 8
  store [32 x i8] %0, ptr %local_0, align 1
  %call_arg_0 = load [32 x i8], ptr %local_0, align 1
  %retval = call { ptr, i64, i64 } @"0000000000000001_vector_singleton_EqL6jZVu5mXJRh"([32 x i8] %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_2__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_address_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_address_ %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.option__Option_address_, ptr %local_3, align 8
  ret %struct.option__Option_address_ %retval1
}

define private { ptr, i64, i64 } @"0000000000000001_vector_singleton_EqL6jZVu5mXJRh"([32 x i8] %0) {
entry:
  %local_0 = alloca [32 x i8], align 1
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca [32 x i8], align 1
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store [32 x i8] %0, ptr %local_0, align 1
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_address)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %loaded_alloca = load ptr, ptr %local_3, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_address, ptr %loaded_alloca, ptr %local_0)
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_5, align 8
  %retval2 = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval2
}

define private %struct.option__Option_address_ @"0000000000000001_option_none_85Lm9pYFBW1PXV"() {
entry:
  %local_0__vec = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca %struct.option__Option_address_, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_address)
  store { ptr, i64, i64 } %retval, ptr %local_0__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_0__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_address_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_address_ %insert_0, ptr %local_1, align 8
  %retval1 = load %struct.option__Option_address_, ptr %local_1, align 8
  ret %struct.option__Option_address_ %retval1
}

define %struct.option__Option_bool_ @"0000000000000002_bcs_peel_option_boo_4RJsKiXKvzRAXW"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.option__Option_bool_, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca i1, align 1
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i1, align 1
  %local_6 = alloca %struct.option__Option_bool_, align 8
  %local_7 = alloca ptr, align 8
  %local_8 = alloca %struct.option__Option_bool_, align 8
  %local_9 = alloca %struct.option__Option_bool_, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_2, align 8
  %call_arg_0 = load ptr, ptr %local_2, align 8
  %retval = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0)
  store i1 %retval, ptr %local_3, align 1
  %cnd = load i1, ptr %local_3, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_4, align 8
  %call_arg_02 = load ptr, ptr %local_4, align 8
  %retval3 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_02)
  store i1 %retval3, ptr %local_5, align 1
  %call_arg_04 = load i1, ptr %local_5, align 1
  %retval5 = call %struct.option__Option_bool_ @"0000000000000001_option_some_Ao9SKJoXum3yE1"(i1 %call_arg_04)
  store %struct.option__Option_bool_ %retval5, ptr %local_6, align 8
  %load_store_tmp6 = load %struct.option__Option_bool_, ptr %local_6, align 8
  store %struct.option__Option_bool_ %load_store_tmp6, ptr %local_1, align 8
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp7 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp7, ptr %local_7, align 8
  %retval8 = call %struct.option__Option_bool_ @"0000000000000001_option_none_HcJFTKMJvLKwdo"()
  store %struct.option__Option_bool_ %retval8, ptr %local_8, align 8
  %load_store_tmp9 = load %struct.option__Option_bool_, ptr %local_8, align 8
  store %struct.option__Option_bool_ %load_store_tmp9, ptr %local_1, align 8
  br label %bb_2

bb_2:                                             ; preds = %bb_0, %bb_1
  %retval10 = load %struct.option__Option_bool_, ptr %local_1, align 8
  ret %struct.option__Option_bool_ %retval10
}

define private %struct.option__Option_bool_ @"0000000000000001_option_some_Ao9SKJoXum3yE1"(i1 %0) {
entry:
  %local_0 = alloca i1, align 1
  %local_1 = alloca i1, align 1
  %local_2__vec = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.option__Option_bool_, align 8
  store i1 %0, ptr %local_0, align 1
  %load_store_tmp = load i1, ptr %local_0, align 1
  store i1 %load_store_tmp, ptr %local_1, align 1
  %call_arg_0 = load i1, ptr %local_1, align 1
  %retval = call { ptr, i64, i64 } @"0000000000000001_vector_singleton_CuhCuha5pBKsvq"(i1 %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_2__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_bool_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_bool_ %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.option__Option_bool_, ptr %local_3, align 8
  ret %struct.option__Option_bool_ %retval1
}

define private { ptr, i64, i64 } @"0000000000000001_vector_singleton_CuhCuha5pBKsvq"(i1 %0) {
entry:
  %local_0 = alloca i1, align 1
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca i1, align 1
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store i1 %0, ptr %local_0, align 1
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_bool)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %load_store_tmp1 = load i1, ptr %local_0, align 1
  store i1 %load_store_tmp1, ptr %local_4, align 1
  %loaded_alloca = load ptr, ptr %local_3, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_bool, ptr %loaded_alloca, ptr %local_4)
  %load_store_tmp2 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp2, ptr %local_5, align 8
  %retval3 = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval3
}

define private %struct.option__Option_bool_ @"0000000000000001_option_none_HcJFTKMJvLKwdo"() {
entry:
  %local_0__vec = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca %struct.option__Option_bool_, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_bool)
  store { ptr, i64, i64 } %retval, ptr %local_0__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_0__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_bool_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_bool_ %insert_0, ptr %local_1, align 8
  %retval1 = load %struct.option__Option_bool_, ptr %local_1, align 8
  ret %struct.option__Option_bool_ %retval1
}

define %struct.option__Option_u128_ @"0000000000000002_bcs_peel_option_u12_C6eBmktECftBLv"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.option__Option_u128_, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca i1, align 1
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i128, align 8
  %local_6 = alloca %struct.option__Option_u128_, align 8
  %local_7 = alloca ptr, align 8
  %local_8 = alloca %struct.option__Option_u128_, align 8
  %local_9 = alloca %struct.option__Option_u128_, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_2, align 8
  %call_arg_0 = load ptr, ptr %local_2, align 8
  %retval = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0)
  store i1 %retval, ptr %local_3, align 1
  %cnd = load i1, ptr %local_3, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_4, align 8
  %call_arg_02 = load ptr, ptr %local_4, align 8
  %retval3 = call i128 @"0000000000000002_bcs_peel_u128_NmHT5JzgtEzTCJ"(ptr %call_arg_02)
  store i128 %retval3, ptr %local_5, align 8
  %call_arg_04 = load i128, ptr %local_5, align 8
  %retval5 = call %struct.option__Option_u128_ @"0000000000000001_option_some_7TwgxN8n15ac7N"(i128 %call_arg_04)
  store %struct.option__Option_u128_ %retval5, ptr %local_6, align 8
  %load_store_tmp6 = load %struct.option__Option_u128_, ptr %local_6, align 8
  store %struct.option__Option_u128_ %load_store_tmp6, ptr %local_1, align 8
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp7 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp7, ptr %local_7, align 8
  %retval8 = call %struct.option__Option_u128_ @"0000000000000001_option_none_3HHBciYin6moFj"()
  store %struct.option__Option_u128_ %retval8, ptr %local_8, align 8
  %load_store_tmp9 = load %struct.option__Option_u128_, ptr %local_8, align 8
  store %struct.option__Option_u128_ %load_store_tmp9, ptr %local_1, align 8
  br label %bb_2

bb_2:                                             ; preds = %bb_0, %bb_1
  %retval10 = load %struct.option__Option_u128_, ptr %local_1, align 8
  ret %struct.option__Option_u128_ %retval10
}

define i128 @"0000000000000002_bcs_peel_u128_NmHT5JzgtEzTCJ"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i128, align 8
  %local_2 = alloca i8, align 1
  %local_3 = alloca i128, align 8
  %local_4 = alloca ptr, align 8
  %local_5__bytes = alloca ptr, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca i1, align 1
  %local_9 = alloca ptr, align 8
  %local_10 = alloca i64, align 8
  %local_11 = alloca i128, align 8
  %local_12 = alloca i8, align 1
  %local_13 = alloca i8, align 1
  %local_14 = alloca i8, align 1
  %local_15 = alloca i1, align 1
  %local_16 = alloca ptr, align 8
  %local_17__bytes = alloca ptr, align 8
  %local_18 = alloca i8, align 1
  %local_19 = alloca i128, align 8
  %local_20 = alloca i128, align 8
  %local_21 = alloca i128, align 8
  %local_22 = alloca i8, align 1
  %local_23 = alloca i128, align 8
  %local_24 = alloca i128, align 8
  %local_25 = alloca i8, align 1
  %local_26 = alloca i8, align 1
  %local_27 = alloca i8, align 1
  %local_28 = alloca ptr, align 8
  %local_29 = alloca i128, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %tmp = load ptr, ptr %local_4, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_5__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_5__bytes, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_6, align 8
  store i64 16, ptr %local_7, align 8
  %ge_src_0 = load i64, ptr %local_6, align 8
  %ge_src_1 = load i64, ptr %local_7, align 8
  %ge_dst = icmp uge i64 %ge_src_0, %ge_src_1
  store i1 %ge_dst, ptr %local_8, align 1
  %cnd = load i1, ptr %local_8, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_9, align 8
  store i64 0, ptr %local_10, align 8
  %call_arg_0 = load i64, ptr %local_10, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  store i128 0, ptr %local_11, align 8
  store i8 0, ptr %local_12, align 1
  %load_store_tmp2 = load i8, ptr %local_12, align 1
  store i8 %load_store_tmp2, ptr %local_2, align 1
  %load_store_tmp3 = load i128, ptr %local_11, align 8
  store i128 %load_store_tmp3, ptr %local_3, align 8
  br label %bb_6

bb_6:                                             ; preds = %join_bb24, %bb_2
  %load_store_tmp4 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp4, ptr %local_13, align 1
  store i8 -128, ptr %local_14, align 1
  %lt_src_0 = load i8, ptr %local_13, align 1
  %lt_src_1 = load i8, ptr %local_14, align 1
  %lt_dst = icmp ult i8 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_15, align 1
  %cnd5 = load i1, ptr %local_15, align 1
  br i1 %cnd5, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_6
  br label %bb_5

bb_5:                                             ; preds = %bb_4
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_16, align 8
  %tmp7 = load ptr, ptr %local_16, align 8
  %fld_ref8 = getelementptr inbounds %struct.bcs__BCS, ptr %tmp7, i32 0, i32 0
  store ptr %fld_ref8, ptr %local_17__bytes, align 8
  %loaded_alloca9 = load ptr, ptr %local_17__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca9, ptr %local_18)
  %cast_src = load i8, ptr %local_18, align 1
  %zext_dst = zext i8 %cast_src to i128
  store i128 %zext_dst, ptr %local_19, align 8
  %load_store_tmp10 = load i128, ptr %local_19, align 8
  store i128 %load_store_tmp10, ptr %local_1, align 8
  %load_store_tmp11 = load i128, ptr %local_3, align 8
  store i128 %load_store_tmp11, ptr %local_20, align 8
  %load_store_tmp12 = load i128, ptr %local_1, align 8
  store i128 %load_store_tmp12, ptr %local_21, align 8
  %load_store_tmp13 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp13, ptr %local_22, align 1
  %shl_src_0 = load i128, ptr %local_21, align 8
  %shl_src_1 = load i8, ptr %local_22, align 1
  %rangecond = icmp uge i8 %shl_src_1, -128
  br i1 %rangecond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_5
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_5
  %zext_dst14 = zext i8 %shl_src_1 to i128
  %shl_dst = shl i128 %shl_src_0, %zext_dst14
  store i128 %shl_dst, ptr %local_23, align 8
  %add_src_0 = load i128, ptr %local_20, align 8
  %add_src_1 = load i128, ptr %local_23, align 8
  %add_dst = add i128 %add_src_0, %add_src_1
  %ovfcond = icmp ult i128 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb15, label %join_bb16

then_bb15:                                        ; preds = %join_bb
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb16:                                        ; preds = %join_bb
  store i128 %add_dst, ptr %local_24, align 8
  %load_store_tmp17 = load i128, ptr %local_24, align 8
  store i128 %load_store_tmp17, ptr %local_3, align 8
  %load_store_tmp18 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp18, ptr %local_25, align 1
  store i8 8, ptr %local_26, align 1
  %add_src_019 = load i8, ptr %local_25, align 1
  %add_src_120 = load i8, ptr %local_26, align 1
  %add_dst21 = add i8 %add_src_019, %add_src_120
  %ovfcond22 = icmp ult i8 %add_dst21, %add_src_019
  br i1 %ovfcond22, label %then_bb23, label %join_bb24

then_bb23:                                        ; preds = %join_bb16
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb24:                                        ; preds = %join_bb16
  store i8 %add_dst21, ptr %local_27, align 1
  %load_store_tmp25 = load i8, ptr %local_27, align 1
  store i8 %load_store_tmp25, ptr %local_2, align 1
  br label %bb_6

bb_3:                                             ; preds = %bb_6
  %load_store_tmp26 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp26, ptr %local_28, align 8
  %load_store_tmp27 = load i128, ptr %local_3, align 8
  store i128 %load_store_tmp27, ptr %local_29, align 8
  %retval28 = load i128, ptr %local_29, align 8
  ret i128 %retval28
}

define private %struct.option__Option_u128_ @"0000000000000001_option_some_7TwgxN8n15ac7N"(i128 %0) {
entry:
  %local_0 = alloca i128, align 8
  %local_1 = alloca i128, align 8
  %local_2__vec = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.option__Option_u128_, align 8
  store i128 %0, ptr %local_0, align 8
  %load_store_tmp = load i128, ptr %local_0, align 8
  store i128 %load_store_tmp, ptr %local_1, align 8
  %call_arg_0 = load i128, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @"0000000000000001_vector_singleton_J39YvSwf3VT3iv"(i128 %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_2__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u128_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u128_ %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.option__Option_u128_, ptr %local_3, align 8
  ret %struct.option__Option_u128_ %retval1
}

define private { ptr, i64, i64 } @"0000000000000001_vector_singleton_J39YvSwf3VT3iv"(i128 %0) {
entry:
  %local_0 = alloca i128, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca i128, align 8
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store i128 %0, ptr %local_0, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u128)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %load_store_tmp1 = load i128, ptr %local_0, align 8
  store i128 %load_store_tmp1, ptr %local_4, align 8
  %loaded_alloca = load ptr, ptr %local_3, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u128, ptr %loaded_alloca, ptr %local_4)
  %load_store_tmp2 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp2, ptr %local_5, align 8
  %retval3 = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval3
}

define private %struct.option__Option_u128_ @"0000000000000001_option_none_3HHBciYin6moFj"() {
entry:
  %local_0__vec = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca %struct.option__Option_u128_, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u128)
  store { ptr, i64, i64 } %retval, ptr %local_0__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_0__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u128_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u128_ %insert_0, ptr %local_1, align 8
  %retval1 = load %struct.option__Option_u128_, ptr %local_1, align 8
  ret %struct.option__Option_u128_ %retval1
}

define %struct.option__Option_u64_ @"0000000000000002_bcs_peel_option_u64_3WJk1T5bFj4c67"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.option__Option_u64_, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca i1, align 1
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca %struct.option__Option_u64_, align 8
  %local_7 = alloca ptr, align 8
  %local_8 = alloca %struct.option__Option_u64_, align 8
  %local_9 = alloca %struct.option__Option_u64_, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_2, align 8
  %call_arg_0 = load ptr, ptr %local_2, align 8
  %retval = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0)
  store i1 %retval, ptr %local_3, align 1
  %cnd = load i1, ptr %local_3, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_4, align 8
  %call_arg_02 = load ptr, ptr %local_4, align 8
  %retval3 = call i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr %call_arg_02)
  store i64 %retval3, ptr %local_5, align 8
  %call_arg_04 = load i64, ptr %local_5, align 8
  %retval5 = call %struct.option__Option_u64_ @"0000000000000001_option_some_4zz2TymghHW1fs"(i64 %call_arg_04)
  store %struct.option__Option_u64_ %retval5, ptr %local_6, align 8
  %load_store_tmp6 = load %struct.option__Option_u64_, ptr %local_6, align 8
  store %struct.option__Option_u64_ %load_store_tmp6, ptr %local_1, align 8
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp7 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp7, ptr %local_7, align 8
  %retval8 = call %struct.option__Option_u64_ @"0000000000000001_option_none_5gpVRKyNEVsuL3"()
  store %struct.option__Option_u64_ %retval8, ptr %local_8, align 8
  %load_store_tmp9 = load %struct.option__Option_u64_, ptr %local_8, align 8
  store %struct.option__Option_u64_ %load_store_tmp9, ptr %local_1, align 8
  br label %bb_2

bb_2:                                             ; preds = %bb_0, %bb_1
  %retval10 = load %struct.option__Option_u64_, ptr %local_1, align 8
  ret %struct.option__Option_u64_ %retval10
}

define i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i8, align 1
  %local_3 = alloca i64, align 8
  %local_4 = alloca ptr, align 8
  %local_5__bytes = alloca ptr, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca i1, align 1
  %local_9 = alloca ptr, align 8
  %local_10 = alloca i64, align 8
  %local_11 = alloca i64, align 8
  %local_12 = alloca i8, align 1
  %local_13 = alloca i8, align 1
  %local_14 = alloca i8, align 1
  %local_15 = alloca i1, align 1
  %local_16 = alloca ptr, align 8
  %local_17__bytes = alloca ptr, align 8
  %local_18 = alloca i8, align 1
  %local_19 = alloca i64, align 8
  %local_20 = alloca i64, align 8
  %local_21 = alloca i64, align 8
  %local_22 = alloca i8, align 1
  %local_23 = alloca i64, align 8
  %local_24 = alloca i64, align 8
  %local_25 = alloca i8, align 1
  %local_26 = alloca i8, align 1
  %local_27 = alloca i8, align 1
  %local_28 = alloca ptr, align 8
  %local_29 = alloca i64, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %tmp = load ptr, ptr %local_4, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_5__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_5__bytes, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_6, align 8
  store i64 8, ptr %local_7, align 8
  %ge_src_0 = load i64, ptr %local_6, align 8
  %ge_src_1 = load i64, ptr %local_7, align 8
  %ge_dst = icmp uge i64 %ge_src_0, %ge_src_1
  store i1 %ge_dst, ptr %local_8, align 1
  %cnd = load i1, ptr %local_8, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_9, align 8
  store i64 0, ptr %local_10, align 8
  %call_arg_0 = load i64, ptr %local_10, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  store i64 0, ptr %local_11, align 8
  store i8 0, ptr %local_12, align 1
  %load_store_tmp2 = load i8, ptr %local_12, align 1
  store i8 %load_store_tmp2, ptr %local_2, align 1
  %load_store_tmp3 = load i64, ptr %local_11, align 8
  store i64 %load_store_tmp3, ptr %local_3, align 8
  br label %bb_6

bb_6:                                             ; preds = %join_bb24, %bb_2
  %load_store_tmp4 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp4, ptr %local_13, align 1
  store i8 64, ptr %local_14, align 1
  %lt_src_0 = load i8, ptr %local_13, align 1
  %lt_src_1 = load i8, ptr %local_14, align 1
  %lt_dst = icmp ult i8 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_15, align 1
  %cnd5 = load i1, ptr %local_15, align 1
  br i1 %cnd5, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_6
  br label %bb_5

bb_5:                                             ; preds = %bb_4
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_16, align 8
  %tmp7 = load ptr, ptr %local_16, align 8
  %fld_ref8 = getelementptr inbounds %struct.bcs__BCS, ptr %tmp7, i32 0, i32 0
  store ptr %fld_ref8, ptr %local_17__bytes, align 8
  %loaded_alloca9 = load ptr, ptr %local_17__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca9, ptr %local_18)
  %cast_src = load i8, ptr %local_18, align 1
  %zext_dst = zext i8 %cast_src to i64
  store i64 %zext_dst, ptr %local_19, align 8
  %load_store_tmp10 = load i64, ptr %local_19, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  %load_store_tmp11 = load i64, ptr %local_3, align 8
  store i64 %load_store_tmp11, ptr %local_20, align 8
  %load_store_tmp12 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp12, ptr %local_21, align 8
  %load_store_tmp13 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp13, ptr %local_22, align 1
  %shl_src_0 = load i64, ptr %local_21, align 8
  %shl_src_1 = load i8, ptr %local_22, align 1
  %rangecond = icmp uge i8 %shl_src_1, 64
  br i1 %rangecond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_5
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_5
  %zext_dst14 = zext i8 %shl_src_1 to i64
  %shl_dst = shl i64 %shl_src_0, %zext_dst14
  store i64 %shl_dst, ptr %local_23, align 8
  %add_src_0 = load i64, ptr %local_20, align 8
  %add_src_1 = load i64, ptr %local_23, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb15, label %join_bb16

then_bb15:                                        ; preds = %join_bb
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb16:                                        ; preds = %join_bb
  store i64 %add_dst, ptr %local_24, align 8
  %load_store_tmp17 = load i64, ptr %local_24, align 8
  store i64 %load_store_tmp17, ptr %local_3, align 8
  %load_store_tmp18 = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp18, ptr %local_25, align 1
  store i8 8, ptr %local_26, align 1
  %add_src_019 = load i8, ptr %local_25, align 1
  %add_src_120 = load i8, ptr %local_26, align 1
  %add_dst21 = add i8 %add_src_019, %add_src_120
  %ovfcond22 = icmp ult i8 %add_dst21, %add_src_019
  br i1 %ovfcond22, label %then_bb23, label %join_bb24

then_bb23:                                        ; preds = %join_bb16
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb24:                                        ; preds = %join_bb16
  store i8 %add_dst21, ptr %local_27, align 1
  %load_store_tmp25 = load i8, ptr %local_27, align 1
  store i8 %load_store_tmp25, ptr %local_2, align 1
  br label %bb_6

bb_3:                                             ; preds = %bb_6
  %load_store_tmp26 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp26, ptr %local_28, align 8
  %load_store_tmp27 = load i64, ptr %local_3, align 8
  store i64 %load_store_tmp27, ptr %local_29, align 8
  %retval28 = load i64, ptr %local_29, align 8
  ret i64 %retval28
}

define private %struct.option__Option_u64_ @"0000000000000001_option_some_4zz2TymghHW1fs"(i64 %0) {
entry:
  %local_0 = alloca i64, align 8
  %local_1 = alloca i64, align 8
  %local_2__vec = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.option__Option_u64_, align 8
  store i64 %0, ptr %local_0, align 8
  %load_store_tmp = load i64, ptr %local_0, align 8
  store i64 %load_store_tmp, ptr %local_1, align 8
  %call_arg_0 = load i64, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @"0000000000000001_vector_singleton_8XKRmxA9XBmXWD"(i64 %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_2__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u64_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u64_ %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.option__Option_u64_, ptr %local_3, align 8
  ret %struct.option__Option_u64_ %retval1
}

define private { ptr, i64, i64 } @"0000000000000001_vector_singleton_8XKRmxA9XBmXWD"(i64 %0) {
entry:
  %local_0 = alloca i64, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca i64, align 8
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store i64 %0, ptr %local_0, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %load_store_tmp1 = load i64, ptr %local_0, align 8
  store i64 %load_store_tmp1, ptr %local_4, align 8
  %loaded_alloca = load ptr, ptr %local_3, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u64, ptr %loaded_alloca, ptr %local_4)
  %load_store_tmp2 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp2, ptr %local_5, align 8
  %retval3 = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval3
}

define private %struct.option__Option_u64_ @"0000000000000001_option_none_5gpVRKyNEVsuL3"() {
entry:
  %local_0__vec = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca %struct.option__Option_u64_, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %retval, ptr %local_0__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_0__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u64_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u64_ %insert_0, ptr %local_1, align 8
  %retval1 = load %struct.option__Option_u64_, ptr %local_1, align 8
  ret %struct.option__Option_u64_ %retval1
}

define %struct.option__Option_u8_ @"0000000000000002_bcs_peel_option_u8_CHXhFou58tDHFw"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.option__Option_u8_, align 8
  %local_2 = alloca ptr, align 8
  %local_3 = alloca i1, align 1
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i8, align 1
  %local_6 = alloca %struct.option__Option_u8_, align 8
  %local_7 = alloca ptr, align 8
  %local_8 = alloca %struct.option__Option_u8_, align 8
  %local_9 = alloca %struct.option__Option_u8_, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_2, align 8
  %call_arg_0 = load ptr, ptr %local_2, align 8
  %retval = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0)
  store i1 %retval, ptr %local_3, align 1
  %cnd = load i1, ptr %local_3, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_4, align 8
  %call_arg_02 = load ptr, ptr %local_4, align 8
  %retval3 = call i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr %call_arg_02)
  store i8 %retval3, ptr %local_5, align 1
  %call_arg_04 = load i8, ptr %local_5, align 1
  %retval5 = call %struct.option__Option_u8_ @"0000000000000001_option_some_xnTx4LiMbuArQQ"(i8 %call_arg_04)
  store %struct.option__Option_u8_ %retval5, ptr %local_6, align 8
  %load_store_tmp6 = load %struct.option__Option_u8_, ptr %local_6, align 8
  store %struct.option__Option_u8_ %load_store_tmp6, ptr %local_1, align 8
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp7 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp7, ptr %local_7, align 8
  %retval8 = call %struct.option__Option_u8_ @"0000000000000001_option_none_FphftULLau4Zg2"()
  store %struct.option__Option_u8_ %retval8, ptr %local_8, align 8
  %load_store_tmp9 = load %struct.option__Option_u8_, ptr %local_8, align 8
  store %struct.option__Option_u8_ %load_store_tmp9, ptr %local_1, align 8
  br label %bb_2

bb_2:                                             ; preds = %bb_0, %bb_1
  %retval10 = load %struct.option__Option_u8_, ptr %local_1, align 8
  ret %struct.option__Option_u8_ %retval10
}

define private %struct.option__Option_u8_ @"0000000000000001_option_some_xnTx4LiMbuArQQ"(i8 %0) {
entry:
  %local_0 = alloca i8, align 1
  %local_1 = alloca i8, align 1
  %local_2__vec = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca %struct.option__Option_u8_, align 8
  store i8 %0, ptr %local_0, align 1
  %load_store_tmp = load i8, ptr %local_0, align 1
  store i8 %load_store_tmp, ptr %local_1, align 1
  %call_arg_0 = load i8, ptr %local_1, align 1
  %retval = call { ptr, i64, i64 } @"0000000000000001_vector_singleton_DCWunrxSPXPExo"(i8 %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_2__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_2__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u8_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u8_ %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.option__Option_u8_, ptr %local_3, align 8
  ret %struct.option__Option_u8_ %retval1
}

define private { ptr, i64, i64 } @"0000000000000001_vector_singleton_DCWunrxSPXPExo"(i8 %0) {
entry:
  %local_0 = alloca i8, align 1
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca i8, align 1
  %local_5 = alloca { ptr, i64, i64 }, align 8
  store i8 %0, ptr %local_0, align 1
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %load_store_tmp1 = load i8, ptr %local_0, align 1
  store i8 %load_store_tmp1, ptr %local_4, align 1
  %loaded_alloca = load ptr, ptr %local_3, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca, ptr %local_4)
  %load_store_tmp2 = load { ptr, i64, i64 }, ptr %local_1, align 8
  store { ptr, i64, i64 } %load_store_tmp2, ptr %local_5, align 8
  %retval3 = load { ptr, i64, i64 }, ptr %local_5, align 8
  ret { ptr, i64, i64 } %retval3
}

define private %struct.option__Option_u8_ @"0000000000000001_option_none_FphftULLau4Zg2"() {
entry:
  %local_0__vec = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca %struct.option__Option_u8_, align 8
  %retval = call { ptr, i64, i64 } @move_native_vector_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %retval, ptr %local_0__vec, align 8
  %fv.0 = load { ptr, i64, i64 }, ptr %local_0__vec, align 8
  %insert_0 = insertvalue %struct.option__Option_u8_ undef, { ptr, i64, i64 } %fv.0, 0
  store %struct.option__Option_u8_ %insert_0, ptr %local_1, align 8
  %retval1 = load %struct.option__Option_u8_, ptr %local_1, align 8
  ret %struct.option__Option_u8_ %retval1
}

define i256 @"0000000000000002_bcs_peel_u256_5D9dbVt6W5MyPc"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i256, align 8
  %local_2 = alloca i16, align 2
  %local_3 = alloca i256, align 8
  %local_4 = alloca ptr, align 8
  %local_5__bytes = alloca ptr, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca i1, align 1
  %local_9 = alloca ptr, align 8
  %local_10 = alloca i64, align 8
  %local_11 = alloca i256, align 8
  %local_12 = alloca i16, align 2
  %local_13 = alloca i16, align 2
  %local_14 = alloca i16, align 2
  %local_15 = alloca i1, align 1
  %local_16 = alloca ptr, align 8
  %local_17__bytes = alloca ptr, align 8
  %local_18 = alloca i8, align 1
  %local_19 = alloca i256, align 8
  %local_20 = alloca i256, align 8
  %local_21 = alloca i256, align 8
  %local_22 = alloca i16, align 2
  %local_23 = alloca i8, align 1
  %local_24 = alloca i256, align 8
  %local_25 = alloca i256, align 8
  %local_26 = alloca i16, align 2
  %local_27 = alloca i16, align 2
  %local_28 = alloca i16, align 2
  %local_29 = alloca ptr, align 8
  %local_30 = alloca i256, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %tmp = load ptr, ptr %local_4, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_5__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_5__bytes, align 8
  %retval = call i64 @move_native_vector_length(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store i64 %retval, ptr %local_6, align 8
  store i64 32, ptr %local_7, align 8
  %ge_src_0 = load i64, ptr %local_6, align 8
  %ge_src_1 = load i64, ptr %local_7, align 8
  %ge_dst = icmp uge i64 %ge_src_0, %ge_src_1
  store i1 %ge_dst, ptr %local_8, align 1
  %cnd = load i1, ptr %local_8, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  %load_store_tmp1 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp1, ptr %local_9, align 8
  store i64 0, ptr %local_10, align 8
  %call_arg_0 = load i64, ptr %local_10, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  store i256 0, ptr %local_11, align 8
  store i16 0, ptr %local_12, align 2
  %load_store_tmp2 = load i16, ptr %local_12, align 2
  store i16 %load_store_tmp2, ptr %local_2, align 2
  %load_store_tmp3 = load i256, ptr %local_11, align 8
  store i256 %load_store_tmp3, ptr %local_3, align 8
  br label %bb_6

bb_6:                                             ; preds = %join_bb25, %bb_2
  %load_store_tmp4 = load i16, ptr %local_2, align 2
  store i16 %load_store_tmp4, ptr %local_13, align 2
  store i16 256, ptr %local_14, align 2
  %lt_src_0 = load i16, ptr %local_13, align 2
  %lt_src_1 = load i16, ptr %local_14, align 2
  %lt_dst = icmp ult i16 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_15, align 1
  %cnd5 = load i1, ptr %local_15, align 1
  br i1 %cnd5, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_6
  br label %bb_5

bb_5:                                             ; preds = %bb_4
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_16, align 8
  %tmp7 = load ptr, ptr %local_16, align 8
  %fld_ref8 = getelementptr inbounds %struct.bcs__BCS, ptr %tmp7, i32 0, i32 0
  store ptr %fld_ref8, ptr %local_17__bytes, align 8
  %loaded_alloca9 = load ptr, ptr %local_17__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca9, ptr %local_18)
  %cast_src = load i8, ptr %local_18, align 1
  %zext_dst = zext i8 %cast_src to i256
  store i256 %zext_dst, ptr %local_19, align 8
  %load_store_tmp10 = load i256, ptr %local_19, align 8
  store i256 %load_store_tmp10, ptr %local_1, align 8
  %load_store_tmp11 = load i256, ptr %local_3, align 8
  store i256 %load_store_tmp11, ptr %local_20, align 8
  %load_store_tmp12 = load i256, ptr %local_1, align 8
  store i256 %load_store_tmp12, ptr %local_21, align 8
  %load_store_tmp13 = load i16, ptr %local_2, align 2
  store i16 %load_store_tmp13, ptr %local_22, align 2
  %cast_src14 = load i16, ptr %local_22, align 2
  %castcond = icmp ugt i16 %cast_src14, 255
  br i1 %castcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_5
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_5
  %trunc_dst = trunc i16 %cast_src14 to i8
  store i8 %trunc_dst, ptr %local_23, align 1
  %shl_src_0 = load i256, ptr %local_21, align 8
  %shl_src_1 = load i8, ptr %local_23, align 1
  %zext_dst15 = zext i8 %shl_src_1 to i256
  %shl_dst = shl i256 %shl_src_0, %zext_dst15
  store i256 %shl_dst, ptr %local_24, align 8
  %add_src_0 = load i256, ptr %local_20, align 8
  %add_src_1 = load i256, ptr %local_24, align 8
  %add_dst = add i256 %add_src_0, %add_src_1
  %ovfcond = icmp ult i256 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb16, label %join_bb17

then_bb16:                                        ; preds = %join_bb
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb17:                                        ; preds = %join_bb
  store i256 %add_dst, ptr %local_25, align 8
  %load_store_tmp18 = load i256, ptr %local_25, align 8
  store i256 %load_store_tmp18, ptr %local_3, align 8
  %load_store_tmp19 = load i16, ptr %local_2, align 2
  store i16 %load_store_tmp19, ptr %local_26, align 2
  store i16 8, ptr %local_27, align 2
  %add_src_020 = load i16, ptr %local_26, align 2
  %add_src_121 = load i16, ptr %local_27, align 2
  %add_dst22 = add i16 %add_src_020, %add_src_121
  %ovfcond23 = icmp ult i16 %add_dst22, %add_src_020
  br i1 %ovfcond23, label %then_bb24, label %join_bb25

then_bb24:                                        ; preds = %join_bb17
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb25:                                        ; preds = %join_bb17
  store i16 %add_dst22, ptr %local_28, align 2
  %load_store_tmp26 = load i16, ptr %local_28, align 2
  store i16 %load_store_tmp26, ptr %local_2, align 2
  br label %bb_6

bb_3:                                             ; preds = %bb_6
  %load_store_tmp27 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp27, ptr %local_29, align 8
  %load_store_tmp28 = load i256, ptr %local_3, align 8
  store i256 %load_store_tmp28, ptr %local_30, align 8
  %retval29 = load i256, ptr %local_30, align 8
  ret i256 %retval29
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_addres_7uWkV96TiaFJqe"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca [32 x i8], align 1
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_address)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_address, ptr %newv, ptr @vdesc)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call [32 x i8] @"0000000000000002_bcs_peel_address_6ieY385GfzQPhi"(ptr %call_arg_07)
  store [32 x i8] %retval8, ptr %local_13, align 1
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_address, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr noalias nonnull %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca i8, align 1
  %local_4 = alloca i64, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i8, align 1
  %local_7 = alloca i64, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca i64, align 8
  %local_13 = alloca ptr, align 8
  %local_14__bytes = alloca ptr, align 8
  %local_15 = alloca i8, align 1
  %local_16 = alloca i64, align 8
  %local_17 = alloca i64, align 8
  %local_18 = alloca i64, align 8
  %local_19 = alloca i64, align 8
  %local_20 = alloca i64, align 8
  %local_21 = alloca i64, align 8
  %local_22 = alloca i64, align 8
  %local_23 = alloca i64, align 8
  %local_24 = alloca i8, align 1
  %local_25 = alloca i64, align 8
  %local_26 = alloca i64, align 8
  %local_27 = alloca i64, align 8
  %local_28 = alloca i64, align 8
  %local_29 = alloca i64, align 8
  %local_30 = alloca i64, align 8
  %local_31 = alloca i1, align 1
  %local_32 = alloca i8, align 1
  %local_33 = alloca i8, align 1
  %local_34 = alloca i8, align 1
  %local_35 = alloca ptr, align 8
  %local_36 = alloca i64, align 8
  store ptr %0, ptr %local_0, align 8
  store i64 0, ptr %local_5, align 8
  store i8 0, ptr %local_6, align 1
  store i64 0, ptr %local_7, align 8
  %load_store_tmp = load i64, ptr %local_7, align 8
  store i64 %load_store_tmp, ptr %local_2, align 8
  %load_store_tmp1 = load i8, ptr %local_6, align 1
  store i8 %load_store_tmp1, ptr %local_3, align 1
  %load_store_tmp2 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp2, ptr %local_4, align 8
  br label %bb_6

bb_6:                                             ; preds = %join_bb27, %entry
  %load_store_tmp3 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp3, ptr %local_8, align 8
  store i64 4, ptr %local_9, align 8
  %le_src_0 = load i64, ptr %local_8, align 8
  %le_src_1 = load i64, ptr %local_9, align 8
  %le_dst = icmp ule i64 %le_src_0, %le_src_1
  store i1 %le_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_6
  br label %bb_2

bb_0:                                             ; preds = %bb_6
  %load_store_tmp4 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp4, ptr %local_11, align 8
  store i64 2, ptr %local_12, align 8
  %call_arg_0 = load i64, ptr %local_12, align 8
  call void @move_rt_abort(i64 %call_arg_0)
  unreachable

bb_2:                                             ; preds = %bb_1
  %load_store_tmp5 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp5, ptr %local_13, align 8
  %tmp = load ptr, ptr %local_13, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__BCS, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_14__bytes, align 8
  %loaded_alloca = load ptr, ptr %local_14__bytes, align 8
  call void @move_native_vector_pop_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca, ptr %local_15)
  %cast_src = load i8, ptr %local_15, align 1
  %zext_dst = zext i8 %cast_src to i64
  store i64 %zext_dst, ptr %local_16, align 8
  %load_store_tmp6 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp6, ptr %local_1, align 8
  %load_store_tmp7 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp7, ptr %local_17, align 8
  store i64 1, ptr %local_18, align 8
  %add_src_0 = load i64, ptr %local_17, align 8
  %add_src_1 = load i64, ptr %local_18, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_19, align 8
  %load_store_tmp8 = load i64, ptr %local_19, align 8
  store i64 %load_store_tmp8, ptr %local_2, align 8
  %load_store_tmp9 = load i64, ptr %local_4, align 8
  store i64 %load_store_tmp9, ptr %local_20, align 8
  %load_store_tmp10 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp10, ptr %local_21, align 8
  store i64 127, ptr %local_22, align 8
  %and_src_0 = load i64, ptr %local_21, align 8
  %and_src_1 = load i64, ptr %local_22, align 8
  %and_dst = and i64 %and_src_0, %and_src_1
  store i64 %and_dst, ptr %local_23, align 8
  %load_store_tmp11 = load i8, ptr %local_3, align 1
  store i8 %load_store_tmp11, ptr %local_24, align 1
  %shl_src_0 = load i64, ptr %local_23, align 8
  %shl_src_1 = load i8, ptr %local_24, align 1
  %rangecond = icmp uge i8 %shl_src_1, 64
  br i1 %rangecond, label %then_bb12, label %join_bb13

then_bb12:                                        ; preds = %join_bb
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb13:                                        ; preds = %join_bb
  %zext_dst14 = zext i8 %shl_src_1 to i64
  %shl_dst = shl i64 %shl_src_0, %zext_dst14
  store i64 %shl_dst, ptr %local_25, align 8
  %or_src_0 = load i64, ptr %local_20, align 8
  %or_src_1 = load i64, ptr %local_25, align 8
  %or_dst = or i64 %or_src_0, %or_src_1
  store i64 %or_dst, ptr %local_26, align 8
  %load_store_tmp15 = load i64, ptr %local_26, align 8
  store i64 %load_store_tmp15, ptr %local_4, align 8
  %load_store_tmp16 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp16, ptr %local_27, align 8
  store i64 128, ptr %local_28, align 8
  %and_src_017 = load i64, ptr %local_27, align 8
  %and_src_118 = load i64, ptr %local_28, align 8
  %and_dst19 = and i64 %and_src_017, %and_src_118
  store i64 %and_dst19, ptr %local_29, align 8
  store i64 0, ptr %local_30, align 8
  %eq_src_0 = load i64, ptr %local_29, align 8
  %eq_src_1 = load i64, ptr %local_30, align 8
  %eq_dst = icmp eq i64 %eq_src_0, %eq_src_1
  store i1 %eq_dst, ptr %local_31, align 1
  %cnd20 = load i1, ptr %local_31, align 1
  br i1 %cnd20, label %bb_4, label %bb_3

bb_4:                                             ; preds = %join_bb13
  br label %bb_5

bb_3:                                             ; preds = %join_bb13
  %load_store_tmp21 = load i8, ptr %local_3, align 1
  store i8 %load_store_tmp21, ptr %local_32, align 1
  store i8 7, ptr %local_33, align 1
  %add_src_022 = load i8, ptr %local_32, align 1
  %add_src_123 = load i8, ptr %local_33, align 1
  %add_dst24 = add i8 %add_src_022, %add_src_123
  %ovfcond25 = icmp ult i8 %add_dst24, %add_src_022
  br i1 %ovfcond25, label %then_bb26, label %join_bb27

then_bb26:                                        ; preds = %bb_3
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb27:                                        ; preds = %bb_3
  store i8 %add_dst24, ptr %local_34, align 1
  %load_store_tmp28 = load i8, ptr %local_34, align 1
  store i8 %load_store_tmp28, ptr %local_3, align 1
  br label %bb_6

bb_5:                                             ; preds = %bb_4
  %load_store_tmp29 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp29, ptr %local_35, align 8
  %load_store_tmp30 = load i64, ptr %local_4, align 8
  store i64 %load_store_tmp30, ptr %local_36, align 8
  %retval = load i64, ptr %local_36, align 8
  ret i64 %retval
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_bool_55BoGbJggFCRbo"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca i1, align 1
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_bool)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_bool, ptr %newv, ptr @vdesc.2)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_07)
  store i1 %retval8, ptr %local_13, align 1
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_bool, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u128_FkuW25NBimnBdr"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca i128, align 8
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u128)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u128, ptr %newv, ptr @vdesc.4)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call i128 @"0000000000000002_bcs_peel_u128_NmHT5JzgtEzTCJ"(ptr %call_arg_07)
  store i128 %retval8, ptr %local_13, align 8
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u128, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u64_DNtE2HaiuV6VEn"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca i64, align 8
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u64, ptr %newv, ptr @vdesc.6)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr %call_arg_07)
  store i64 %retval8, ptr %local_13, align 8
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u64, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u8_4z7Az3QuZfeaFB"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca i8, align 1
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u8, ptr %newv, ptr @vdesc.8)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr %call_arg_07)
  store i8 %retval8, ptr %local_13, align 1
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_u8, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_vec_u8_7PcPmN6rdUgmA9"(ptr noalias nonnull %0) {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca ptr, align 8
  %local_1 = alloca i64, align 8
  %local_2 = alloca i64, align 8
  %local_3 = alloca { ptr, i64, i64 }, align 8
  %local_4 = alloca ptr, align 8
  %local_5 = alloca i64, align 8
  %local_6 = alloca i64, align 8
  %local_7 = alloca { ptr, i64, i64 }, align 8
  %local_8 = alloca i64, align 8
  %local_9 = alloca i64, align 8
  %local_10 = alloca i1, align 1
  %local_11 = alloca ptr, align 8
  %local_12 = alloca ptr, align 8
  %local_13 = alloca { ptr, i64, i64 }, align 8
  %local_14 = alloca i64, align 8
  %local_15 = alloca i64, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca ptr, align 8
  %local_18 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_4, align 8
  %call_arg_0 = load ptr, ptr %local_4, align 8
  %retval = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0)
  store i64 %retval, ptr %local_5, align 8
  store i64 0, ptr %local_6, align 8
  %1 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %1, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u8, ptr %newv, ptr @vdesc.10)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_7, align 8
  %load_store_tmp1 = load { ptr, i64, i64 }, ptr %local_7, align 8
  store { ptr, i64, i64 } %load_store_tmp1, ptr %local_3, align 8
  %load_store_tmp2 = load i64, ptr %local_6, align 8
  store i64 %load_store_tmp2, ptr %local_1, align 8
  %load_store_tmp3 = load i64, ptr %local_5, align 8
  store i64 %load_store_tmp3, ptr %local_2, align 8
  br label %bb_3

bb_3:                                             ; preds = %join_bb, %entry
  %load_store_tmp4 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp4, ptr %local_8, align 8
  %load_store_tmp5 = load i64, ptr %local_2, align 8
  store i64 %load_store_tmp5, ptr %local_9, align 8
  %lt_src_0 = load i64, ptr %local_8, align 8
  %lt_src_1 = load i64, ptr %local_9, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_10, align 1
  %cnd = load i1, ptr %local_10, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %bb_3
  br label %bb_2

bb_2:                                             ; preds = %bb_1
  store ptr %local_3, ptr %local_11, align 8
  %load_store_tmp6 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp6, ptr %local_12, align 8
  %call_arg_07 = load ptr, ptr %local_12, align 8
  %retval8 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u8_4z7Az3QuZfeaFB"(ptr %call_arg_07)
  store { ptr, i64, i64 } %retval8, ptr %local_13, align 8
  %loaded_alloca = load ptr, ptr %local_11, align 8
  call void @move_native_vector_push_back(ptr @__move_rttydesc_vector_u8_, ptr %loaded_alloca, ptr %local_13)
  %load_store_tmp9 = load i64, ptr %local_1, align 8
  store i64 %load_store_tmp9, ptr %local_14, align 8
  store i64 1, ptr %local_15, align 8
  %add_src_0 = load i64, ptr %local_14, align 8
  %add_src_1 = load i64, ptr %local_15, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_2
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_2
  store i64 %add_dst, ptr %local_16, align 8
  %load_store_tmp10 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp10, ptr %local_1, align 8
  br label %bb_3

bb_0:                                             ; preds = %bb_3
  %load_store_tmp11 = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp11, ptr %local_17, align 8
  %load_store_tmp12 = load { ptr, i64, i64 }, ptr %local_3, align 8
  store { ptr, i64, i64 } %load_store_tmp12, ptr %local_18, align 8
  %retval13 = load { ptr, i64, i64 }, ptr %local_18, align 8
  ret { ptr, i64, i64 } %retval13
}

define private void @"0000000000000002_bcs_test_bcs_AuukBNfz84sy81"() {
entry:
  %newv279 = alloca { ptr, i64, i64 }, align 8
  %newv266 = alloca { ptr, i64, i64 }, align 8
  %newv253 = alloca { ptr, i64, i64 }, align 8
  %newv240 = alloca { ptr, i64, i64 }, align 8
  %newv227 = alloca { ptr, i64, i64 }, align 8
  %newv214 = alloca { ptr, i64, i64 }, align 8
  %newv120 = alloca { ptr, i64, i64 }, align 8
  %newv103 = alloca { ptr, i64, i64 }, align 8
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca %struct.bcs__BCS, align 8
  %local_1 = alloca %struct.bcs__BCS, align 8
  %local_2 = alloca %struct.bcs__BCS, align 8
  %local_3 = alloca %struct.bcs__BCS, align 8
  %local_4 = alloca %struct.bcs__BCS, align 8
  %local_5 = alloca %struct.bcs__BCS, align 8
  %local_6 = alloca %struct.bcs__BCS, align 8
  %local_7 = alloca %struct.bcs__BCS, align 8
  %local_8 = alloca %struct.bcs__BCS, align 8
  %local_9 = alloca %struct.bcs__BCS, align 8
  %local_10 = alloca %struct.bcs__BCS, align 8
  %local_11 = alloca %struct.bcs__BCS, align 8
  %local_12 = alloca %struct.bcs__BCS, align 8
  %local_13 = alloca %struct.bcs__BCS, align 8
  %local_14 = alloca %struct.bcs__BCS, align 8
  %local_15 = alloca %struct.bcs__BCS, align 8
  %local_16 = alloca i64, align 8
  %local_17 = alloca %struct.bcs__Info, align 8
  %local_18 = alloca i64, align 8
  %local_19 = alloca [32 x i8], align 1
  %local_20 = alloca { ptr, i64, i64 }, align 8
  %local_21 = alloca { ptr, i64, i64 }, align 8
  %local_22 = alloca { ptr, i64, i64 }, align 8
  %local_23 = alloca { ptr, i64, i64 }, align 8
  %local_24 = alloca { ptr, i64, i64 }, align 8
  %local_25 = alloca { ptr, i64, i64 }, align 8
  %local_26 = alloca i1, align 1
  %local_27 = alloca i1, align 1
  %local_28 = alloca i8, align 1
  %local_29 = alloca i64, align 8
  %local_30 = alloca i64, align 8
  %local_31 = alloca i128, align 8
  %local_32 = alloca { ptr, i64, i64 }, align 8
  %local_33 = alloca { ptr, i64, i64 }, align 8
  %local_34 = alloca [32 x i8], align 1
  %local_35 = alloca ptr, align 8
  %local_36 = alloca { ptr, i64, i64 }, align 8
  %local_37 = alloca %struct.bcs__BCS, align 8
  %local_38 = alloca [32 x i8], align 1
  %local_39 = alloca ptr, align 8
  %local_40 = alloca [32 x i8], align 1
  %local_41 = alloca i1, align 1
  %local_42 = alloca i64, align 8
  %local_43 = alloca i1, align 1
  %local_44 = alloca ptr, align 8
  %local_45 = alloca { ptr, i64, i64 }, align 8
  %local_46 = alloca %struct.bcs__BCS, align 8
  %local_47 = alloca i1, align 1
  %local_48 = alloca ptr, align 8
  %local_49 = alloca i1, align 1
  %local_50 = alloca i1, align 1
  %local_51 = alloca i64, align 8
  %local_52 = alloca i1, align 1
  %local_53 = alloca ptr, align 8
  %local_54 = alloca { ptr, i64, i64 }, align 8
  %local_55 = alloca %struct.bcs__BCS, align 8
  %local_56 = alloca i1, align 1
  %local_57 = alloca ptr, align 8
  %local_58 = alloca i1, align 1
  %local_59 = alloca i1, align 1
  %local_60 = alloca i64, align 8
  %local_61 = alloca i8, align 1
  %local_62 = alloca ptr, align 8
  %local_63 = alloca { ptr, i64, i64 }, align 8
  %local_64 = alloca %struct.bcs__BCS, align 8
  %local_65 = alloca i8, align 1
  %local_66 = alloca ptr, align 8
  %local_67 = alloca i8, align 1
  %local_68 = alloca i1, align 1
  %local_69 = alloca i64, align 8
  %local_70 = alloca i64, align 8
  %local_71 = alloca ptr, align 8
  %local_72 = alloca { ptr, i64, i64 }, align 8
  %local_73 = alloca %struct.bcs__BCS, align 8
  %local_74 = alloca i64, align 8
  %local_75 = alloca ptr, align 8
  %local_76 = alloca i64, align 8
  %local_77 = alloca i1, align 1
  %local_78 = alloca i64, align 8
  %local_79 = alloca i64, align 8
  %local_80 = alloca ptr, align 8
  %local_81 = alloca { ptr, i64, i64 }, align 8
  %local_82 = alloca %struct.bcs__BCS, align 8
  %local_83 = alloca i64, align 8
  %local_84 = alloca ptr, align 8
  %local_85 = alloca i64, align 8
  %local_86 = alloca i1, align 1
  %local_87 = alloca i64, align 8
  %local_88 = alloca i128, align 8
  %local_89 = alloca ptr, align 8
  %local_90 = alloca { ptr, i64, i64 }, align 8
  %local_91 = alloca %struct.bcs__BCS, align 8
  %local_92 = alloca i128, align 8
  %local_93 = alloca ptr, align 8
  %local_94 = alloca i128, align 8
  %local_95 = alloca i1, align 1
  %local_96 = alloca i64, align 8
  %local_97 = alloca { ptr, i64, i64 }, align 8
  %local_98 = alloca ptr, align 8
  %local_99 = alloca { ptr, i64, i64 }, align 8
  %local_100 = alloca %struct.bcs__BCS, align 8
  %local_101 = alloca ptr, align 8
  %local_102 = alloca i64, align 8
  %local_103 = alloca ptr, align 8
  %local_104 = alloca i64, align 8
  %local_105 = alloca i1, align 1
  %local_106 = alloca i64, align 8
  %local_107 = alloca { ptr, i64, i64 }, align 8
  %local_108 = alloca ptr, align 8
  %local_109 = alloca { ptr, i64, i64 }, align 8
  %local_110 = alloca %struct.bcs__BCS, align 8
  %local_111 = alloca ptr, align 8
  %local_112 = alloca i64, align 8
  %local_113 = alloca ptr, align 8
  %local_114 = alloca i64, align 8
  %local_115 = alloca i1, align 1
  %local_116 = alloca i64, align 8
  %local_117__a = alloca i1, align 1
  %local_118__b = alloca i8, align 1
  %local_119__c = alloca i64, align 8
  %local_120__d = alloca i128, align 8
  %local_121__k = alloca { ptr, i64, i64 }, align 8
  %local_122__s = alloca [32 x i8], align 1
  %local_123 = alloca %struct.bcs__Info, align 8
  %local_124 = alloca ptr, align 8
  %local_125 = alloca { ptr, i64, i64 }, align 8
  %local_126 = alloca %struct.bcs__BCS, align 8
  %local_127 = alloca ptr, align 8
  %local_128__a = alloca ptr, align 8
  %local_129 = alloca i1, align 1
  %local_130 = alloca ptr, align 8
  %local_131 = alloca i1, align 1
  %local_132 = alloca i1, align 1
  %local_133 = alloca i64, align 8
  %local_134 = alloca ptr, align 8
  %local_135__b = alloca ptr, align 8
  %local_136 = alloca i8, align 1
  %local_137 = alloca ptr, align 8
  %local_138 = alloca i8, align 1
  %local_139 = alloca i1, align 1
  %local_140 = alloca i64, align 8
  %local_141 = alloca ptr, align 8
  %local_142__c = alloca ptr, align 8
  %local_143 = alloca i64, align 8
  %local_144 = alloca ptr, align 8
  %local_145 = alloca i64, align 8
  %local_146 = alloca i1, align 1
  %local_147 = alloca i64, align 8
  %local_148 = alloca ptr, align 8
  %local_149__d = alloca ptr, align 8
  %local_150 = alloca i128, align 8
  %local_151 = alloca ptr, align 8
  %local_152 = alloca i128, align 8
  %local_153 = alloca i1, align 1
  %local_154 = alloca i64, align 8
  %local_155 = alloca ptr, align 8
  %local_156 = alloca i64, align 8
  %local_157 = alloca ptr, align 8
  %local_158__k = alloca ptr, align 8
  %local_159 = alloca i64, align 8
  %local_160 = alloca i64, align 8
  %local_161 = alloca i1, align 1
  %local_162 = alloca i64, align 8
  %local_163 = alloca i64, align 8
  %local_164 = alloca i64, align 8
  %local_165 = alloca ptr, align 8
  %local_166__k = alloca ptr, align 8
  %local_167 = alloca i64, align 8
  %local_168 = alloca i1, align 1
  %local_169 = alloca ptr, align 8
  %local_170__k = alloca ptr, align 8
  %local_171 = alloca i64, align 8
  %local_172 = alloca ptr, align 8
  %local_173 = alloca i1, align 1
  %local_174 = alloca ptr, align 8
  %local_175 = alloca i1, align 1
  %local_176 = alloca i1, align 1
  %local_177 = alloca i64, align 8
  %local_178 = alloca i64, align 8
  %local_179 = alloca i64, align 8
  %local_180 = alloca i64, align 8
  %local_181 = alloca ptr, align 8
  %local_182__s = alloca ptr, align 8
  %local_183 = alloca [32 x i8], align 1
  %local_184 = alloca ptr, align 8
  %local_185 = alloca [32 x i8], align 1
  %local_186 = alloca i1, align 1
  %local_187 = alloca i64, align 8
  %local_188 = alloca { ptr, i64, i64 }, align 8
  %local_189 = alloca ptr, align 8
  %local_190 = alloca { ptr, i64, i64 }, align 8
  %local_191 = alloca %struct.bcs__BCS, align 8
  %local_192 = alloca { ptr, i64, i64 }, align 8
  %local_193 = alloca ptr, align 8
  %local_194 = alloca { ptr, i64, i64 }, align 8
  %local_195 = alloca i1, align 1
  %local_196 = alloca i64, align 8
  %local_197 = alloca { ptr, i64, i64 }, align 8
  %local_198 = alloca ptr, align 8
  %local_199 = alloca { ptr, i64, i64 }, align 8
  %local_200 = alloca %struct.bcs__BCS, align 8
  %local_201 = alloca { ptr, i64, i64 }, align 8
  %local_202 = alloca ptr, align 8
  %local_203 = alloca { ptr, i64, i64 }, align 8
  %local_204 = alloca i1, align 1
  %local_205 = alloca i64, align 8
  %local_206 = alloca { ptr, i64, i64 }, align 8
  %local_207 = alloca ptr, align 8
  %local_208 = alloca { ptr, i64, i64 }, align 8
  %local_209 = alloca %struct.bcs__BCS, align 8
  %local_210 = alloca { ptr, i64, i64 }, align 8
  %local_211 = alloca ptr, align 8
  %local_212 = alloca { ptr, i64, i64 }, align 8
  %local_213 = alloca i1, align 1
  %local_214 = alloca i64, align 8
  %local_215 = alloca { ptr, i64, i64 }, align 8
  %local_216 = alloca ptr, align 8
  %local_217 = alloca { ptr, i64, i64 }, align 8
  %local_218 = alloca %struct.bcs__BCS, align 8
  %local_219 = alloca { ptr, i64, i64 }, align 8
  %local_220 = alloca ptr, align 8
  %local_221 = alloca { ptr, i64, i64 }, align 8
  %local_222 = alloca i1, align 1
  %local_223 = alloca i64, align 8
  %local_224 = alloca { ptr, i64, i64 }, align 8
  %local_225 = alloca ptr, align 8
  %local_226 = alloca { ptr, i64, i64 }, align 8
  %local_227 = alloca %struct.bcs__BCS, align 8
  %local_228 = alloca { ptr, i64, i64 }, align 8
  %local_229 = alloca ptr, align 8
  %local_230 = alloca { ptr, i64, i64 }, align 8
  %local_231 = alloca i1, align 1
  %local_232 = alloca i64, align 8
  %local_233 = alloca { ptr, i64, i64 }, align 8
  %local_234 = alloca ptr, align 8
  %local_235 = alloca { ptr, i64, i64 }, align 8
  %local_236 = alloca %struct.bcs__BCS, align 8
  %local_237 = alloca { ptr, i64, i64 }, align 8
  %local_238 = alloca ptr, align 8
  %local_239 = alloca { ptr, i64, i64 }, align 8
  %local_240 = alloca i1, align 1
  %local_241 = alloca i64, align 8
  %0 = load [32 x i8], ptr @acct.addr, align 1
  store [32 x i8] %0, ptr %local_34, align 1
  %load_store_tmp = load [32 x i8], ptr %local_34, align 1
  store [32 x i8] %load_store_tmp, ptr %local_19, align 1
  store ptr %local_19, ptr %local_35, align 8
  %call_arg_0 = load ptr, ptr %local_35, align 8
  %retval = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6z6DhCEHM2cfNu"(ptr %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_36, align 8
  %call_arg_01 = load { ptr, i64, i64 }, ptr %local_36, align 8
  %retval2 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_01)
  store %struct.bcs__BCS %retval2, ptr %local_37, align 8
  %load_store_tmp3 = load %struct.bcs__BCS, ptr %local_37, align 8
  store %struct.bcs__BCS %load_store_tmp3, ptr %local_0, align 8
  store ptr %local_0, ptr %local_39, align 8
  %call_arg_04 = load ptr, ptr %local_39, align 8
  %retval5 = call [32 x i8] @"0000000000000002_bcs_peel_address_6ieY385GfzQPhi"(ptr %call_arg_04)
  store [32 x i8] %retval5, ptr %local_40, align 1
  %1 = call i32 @memcmp(ptr %local_19, ptr %local_40, i64 32)
  %eq_dst = icmp eq i32 %1, 0
  store i1 %eq_dst, ptr %local_41, align 1
  %cnd = load i1, ptr %local_41, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  store i64 0, ptr %local_42, align 8
  %call_arg_06 = load i64, ptr %local_42, align 8
  call void @move_rt_abort(i64 %call_arg_06)
  unreachable

bb_2:                                             ; preds = %bb_1
  store i1 true, ptr %local_43, align 1
  %load_store_tmp7 = load i1, ptr %local_43, align 1
  store i1 %load_store_tmp7, ptr %local_26, align 1
  store ptr %local_26, ptr %local_44, align 8
  %call_arg_08 = load ptr, ptr %local_44, align 8
  %retval9 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_4uemf4C6AKb21F"(ptr %call_arg_08)
  store { ptr, i64, i64 } %retval9, ptr %local_45, align 8
  %call_arg_010 = load { ptr, i64, i64 }, ptr %local_45, align 8
  %retval11 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_010)
  store %struct.bcs__BCS %retval11, ptr %local_46, align 8
  %load_store_tmp12 = load %struct.bcs__BCS, ptr %local_46, align 8
  store %struct.bcs__BCS %load_store_tmp12, ptr %local_8, align 8
  %load_store_tmp13 = load i1, ptr %local_26, align 1
  store i1 %load_store_tmp13, ptr %local_47, align 1
  store ptr %local_8, ptr %local_48, align 8
  %call_arg_014 = load ptr, ptr %local_48, align 8
  %retval15 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_014)
  store i1 %retval15, ptr %local_49, align 1
  %eq_src_0 = load i1, ptr %local_47, align 1
  %eq_src_1 = load i1, ptr %local_49, align 1
  %eq_dst16 = icmp eq i1 %eq_src_0, %eq_src_1
  store i1 %eq_dst16, ptr %local_50, align 1
  %cnd17 = load i1, ptr %local_50, align 1
  br i1 %cnd17, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_2
  br label %bb_5

bb_3:                                             ; preds = %bb_2
  store i64 0, ptr %local_51, align 8
  %call_arg_018 = load i64, ptr %local_51, align 8
  call void @move_rt_abort(i64 %call_arg_018)
  unreachable

bb_5:                                             ; preds = %bb_4
  store i1 false, ptr %local_52, align 1
  %load_store_tmp19 = load i1, ptr %local_52, align 1
  store i1 %load_store_tmp19, ptr %local_27, align 1
  store ptr %local_27, ptr %local_53, align 8
  %call_arg_020 = load ptr, ptr %local_53, align 8
  %retval21 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_4uemf4C6AKb21F"(ptr %call_arg_020)
  store { ptr, i64, i64 } %retval21, ptr %local_54, align 8
  %call_arg_022 = load { ptr, i64, i64 }, ptr %local_54, align 8
  %retval23 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_022)
  store %struct.bcs__BCS %retval23, ptr %local_55, align 8
  %load_store_tmp24 = load %struct.bcs__BCS, ptr %local_55, align 8
  store %struct.bcs__BCS %load_store_tmp24, ptr %local_9, align 8
  %load_store_tmp25 = load i1, ptr %local_27, align 1
  store i1 %load_store_tmp25, ptr %local_56, align 1
  store ptr %local_9, ptr %local_57, align 8
  %call_arg_026 = load ptr, ptr %local_57, align 8
  %retval27 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_026)
  store i1 %retval27, ptr %local_58, align 1
  %eq_src_028 = load i1, ptr %local_56, align 1
  %eq_src_129 = load i1, ptr %local_58, align 1
  %eq_dst30 = icmp eq i1 %eq_src_028, %eq_src_129
  store i1 %eq_dst30, ptr %local_59, align 1
  %cnd31 = load i1, ptr %local_59, align 1
  br i1 %cnd31, label %bb_7, label %bb_6

bb_7:                                             ; preds = %bb_5
  br label %bb_8

bb_6:                                             ; preds = %bb_5
  store i64 0, ptr %local_60, align 8
  %call_arg_032 = load i64, ptr %local_60, align 8
  call void @move_rt_abort(i64 %call_arg_032)
  unreachable

bb_8:                                             ; preds = %bb_7
  store i8 100, ptr %local_61, align 1
  %load_store_tmp33 = load i8, ptr %local_61, align 1
  store i8 %load_store_tmp33, ptr %local_28, align 1
  store ptr %local_28, ptr %local_62, align 8
  %call_arg_034 = load ptr, ptr %local_62, align 8
  %retval35 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_27yEv5Fct1GqPE"(ptr %call_arg_034)
  store { ptr, i64, i64 } %retval35, ptr %local_63, align 8
  %call_arg_036 = load { ptr, i64, i64 }, ptr %local_63, align 8
  %retval37 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_036)
  store %struct.bcs__BCS %retval37, ptr %local_64, align 8
  %load_store_tmp38 = load %struct.bcs__BCS, ptr %local_64, align 8
  store %struct.bcs__BCS %load_store_tmp38, ptr %local_10, align 8
  %load_store_tmp39 = load i8, ptr %local_28, align 1
  store i8 %load_store_tmp39, ptr %local_65, align 1
  store ptr %local_10, ptr %local_66, align 8
  %call_arg_040 = load ptr, ptr %local_66, align 8
  %retval41 = call i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr %call_arg_040)
  store i8 %retval41, ptr %local_67, align 1
  %eq_src_042 = load i8, ptr %local_65, align 1
  %eq_src_143 = load i8, ptr %local_67, align 1
  %eq_dst44 = icmp eq i8 %eq_src_042, %eq_src_143
  store i1 %eq_dst44, ptr %local_68, align 1
  %cnd45 = load i1, ptr %local_68, align 1
  br i1 %cnd45, label %bb_10, label %bb_9

bb_10:                                            ; preds = %bb_8
  br label %bb_11

bb_9:                                             ; preds = %bb_8
  store i64 0, ptr %local_69, align 8
  %call_arg_046 = load i64, ptr %local_69, align 8
  call void @move_rt_abort(i64 %call_arg_046)
  unreachable

bb_11:                                            ; preds = %bb_10
  store i64 1000100, ptr %local_70, align 8
  %load_store_tmp47 = load i64, ptr %local_70, align 8
  store i64 %load_store_tmp47, ptr %local_29, align 8
  store ptr %local_29, ptr %local_71, align 8
  %call_arg_048 = load ptr, ptr %local_71, align 8
  %retval49 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6NhXVWFo2aWmc9"(ptr %call_arg_048)
  store { ptr, i64, i64 } %retval49, ptr %local_72, align 8
  %call_arg_050 = load { ptr, i64, i64 }, ptr %local_72, align 8
  %retval51 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_050)
  store %struct.bcs__BCS %retval51, ptr %local_73, align 8
  %load_store_tmp52 = load %struct.bcs__BCS, ptr %local_73, align 8
  store %struct.bcs__BCS %load_store_tmp52, ptr %local_11, align 8
  %load_store_tmp53 = load i64, ptr %local_29, align 8
  store i64 %load_store_tmp53, ptr %local_74, align 8
  store ptr %local_11, ptr %local_75, align 8
  %call_arg_054 = load ptr, ptr %local_75, align 8
  %retval55 = call i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr %call_arg_054)
  store i64 %retval55, ptr %local_76, align 8
  %eq_src_056 = load i64, ptr %local_74, align 8
  %eq_src_157 = load i64, ptr %local_76, align 8
  %eq_dst58 = icmp eq i64 %eq_src_056, %eq_src_157
  store i1 %eq_dst58, ptr %local_77, align 1
  %cnd59 = load i1, ptr %local_77, align 1
  br i1 %cnd59, label %bb_13, label %bb_12

bb_13:                                            ; preds = %bb_11
  br label %bb_14

bb_12:                                            ; preds = %bb_11
  store i64 0, ptr %local_78, align 8
  %call_arg_060 = load i64, ptr %local_78, align 8
  call void @move_rt_abort(i64 %call_arg_060)
  unreachable

bb_14:                                            ; preds = %bb_13
  store i64 100000000000000, ptr %local_79, align 8
  %load_store_tmp61 = load i64, ptr %local_79, align 8
  store i64 %load_store_tmp61, ptr %local_30, align 8
  store ptr %local_30, ptr %local_80, align 8
  %call_arg_062 = load ptr, ptr %local_80, align 8
  %retval63 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6NhXVWFo2aWmc9"(ptr %call_arg_062)
  store { ptr, i64, i64 } %retval63, ptr %local_81, align 8
  %call_arg_064 = load { ptr, i64, i64 }, ptr %local_81, align 8
  %retval65 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_064)
  store %struct.bcs__BCS %retval65, ptr %local_82, align 8
  %load_store_tmp66 = load %struct.bcs__BCS, ptr %local_82, align 8
  store %struct.bcs__BCS %load_store_tmp66, ptr %local_12, align 8
  %load_store_tmp67 = load i64, ptr %local_30, align 8
  store i64 %load_store_tmp67, ptr %local_83, align 8
  store ptr %local_12, ptr %local_84, align 8
  %call_arg_068 = load ptr, ptr %local_84, align 8
  %retval69 = call i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr %call_arg_068)
  store i64 %retval69, ptr %local_85, align 8
  %eq_src_070 = load i64, ptr %local_83, align 8
  %eq_src_171 = load i64, ptr %local_85, align 8
  %eq_dst72 = icmp eq i64 %eq_src_070, %eq_src_171
  store i1 %eq_dst72, ptr %local_86, align 1
  %cnd73 = load i1, ptr %local_86, align 1
  br i1 %cnd73, label %bb_16, label %bb_15

bb_16:                                            ; preds = %bb_14
  br label %bb_17

bb_15:                                            ; preds = %bb_14
  store i64 0, ptr %local_87, align 8
  %call_arg_074 = load i64, ptr %local_87, align 8
  call void @move_rt_abort(i64 %call_arg_074)
  unreachable

bb_17:                                            ; preds = %bb_16
  store i128 100000000000000000000000000, ptr %local_88, align 8
  %load_store_tmp75 = load i128, ptr %local_88, align 8
  store i128 %load_store_tmp75, ptr %local_31, align 8
  store ptr %local_31, ptr %local_89, align 8
  %call_arg_076 = load ptr, ptr %local_89, align 8
  %retval77 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_8jFATsXF3wZTF4"(ptr %call_arg_076)
  store { ptr, i64, i64 } %retval77, ptr %local_90, align 8
  %call_arg_078 = load { ptr, i64, i64 }, ptr %local_90, align 8
  %retval79 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_078)
  store %struct.bcs__BCS %retval79, ptr %local_91, align 8
  %load_store_tmp80 = load %struct.bcs__BCS, ptr %local_91, align 8
  store %struct.bcs__BCS %load_store_tmp80, ptr %local_13, align 8
  %load_store_tmp81 = load i128, ptr %local_31, align 8
  store i128 %load_store_tmp81, ptr %local_92, align 8
  store ptr %local_13, ptr %local_93, align 8
  %call_arg_082 = load ptr, ptr %local_93, align 8
  %retval83 = call i128 @"0000000000000002_bcs_peel_u128_NmHT5JzgtEzTCJ"(ptr %call_arg_082)
  store i128 %retval83, ptr %local_94, align 8
  %eq_src_084 = load i128, ptr %local_92, align 8
  %eq_src_185 = load i128, ptr %local_94, align 8
  %eq_dst86 = icmp eq i128 %eq_src_084, %eq_src_185
  store i1 %eq_dst86, ptr %local_95, align 1
  %cnd87 = load i1, ptr %local_95, align 1
  br i1 %cnd87, label %bb_19, label %bb_18

bb_19:                                            ; preds = %bb_17
  br label %bb_20

bb_18:                                            ; preds = %bb_17
  store i64 0, ptr %local_96, align 8
  %call_arg_088 = load i64, ptr %local_96, align 8
  call void @move_rt_abort(i64 %call_arg_088)
  unreachable

bb_20:                                            ; preds = %bb_19
  %2 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %2, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u64, ptr %newv, ptr @vdesc.12)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_97, align 8
  %load_store_tmp89 = load { ptr, i64, i64 }, ptr %local_97, align 8
  store { ptr, i64, i64 } %load_store_tmp89, ptr %local_32, align 8
  store ptr %local_32, ptr %local_98, align 8
  %call_arg_090 = load ptr, ptr %local_98, align 8
  %retval91 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_5WzzmfEmjB8Pdw"(ptr %call_arg_090)
  store { ptr, i64, i64 } %retval91, ptr %local_99, align 8
  %call_arg_092 = load { ptr, i64, i64 }, ptr %local_99, align 8
  %retval93 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_092)
  store %struct.bcs__BCS %retval93, ptr %local_100, align 8
  %load_store_tmp94 = load %struct.bcs__BCS, ptr %local_100, align 8
  store %struct.bcs__BCS %load_store_tmp94, ptr %local_14, align 8
  store ptr %local_32, ptr %local_101, align 8
  %loaded_alloca = load ptr, ptr %local_101, align 8
  %retval95 = call i64 @move_native_vector_length(ptr @__move_rttydesc_u64, ptr %loaded_alloca)
  store i64 %retval95, ptr %local_102, align 8
  store ptr %local_14, ptr %local_103, align 8
  %call_arg_096 = load ptr, ptr %local_103, align 8
  %retval97 = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_096)
  store i64 %retval97, ptr %local_104, align 8
  %eq_src_098 = load i64, ptr %local_102, align 8
  %eq_src_199 = load i64, ptr %local_104, align 8
  %eq_dst100 = icmp eq i64 %eq_src_098, %eq_src_199
  store i1 %eq_dst100, ptr %local_105, align 1
  %cnd101 = load i1, ptr %local_105, align 1
  br i1 %cnd101, label %bb_22, label %bb_21

bb_22:                                            ; preds = %bb_20
  br label %bb_23

bb_21:                                            ; preds = %bb_20
  store i64 0, ptr %local_106, align 8
  %call_arg_0102 = load i64, ptr %local_106, align 8
  call void @move_rt_abort(i64 %call_arg_0102)
  unreachable

bb_23:                                            ; preds = %bb_22
  %3 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %3, ptr %newv103, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u64, ptr %newv103, ptr @vdesc.14)
  %reload104 = load { ptr, i64, i64 }, ptr %newv103, align 8
  store { ptr, i64, i64 } %reload104, ptr %local_107, align 8
  %load_store_tmp105 = load { ptr, i64, i64 }, ptr %local_107, align 8
  store { ptr, i64, i64 } %load_store_tmp105, ptr %local_33, align 8
  store ptr %local_33, ptr %local_108, align 8
  %call_arg_0106 = load ptr, ptr %local_108, align 8
  %retval107 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_5WzzmfEmjB8Pdw"(ptr %call_arg_0106)
  store { ptr, i64, i64 } %retval107, ptr %local_109, align 8
  %call_arg_0108 = load { ptr, i64, i64 }, ptr %local_109, align 8
  %retval109 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0108)
  store %struct.bcs__BCS %retval109, ptr %local_110, align 8
  %load_store_tmp110 = load %struct.bcs__BCS, ptr %local_110, align 8
  store %struct.bcs__BCS %load_store_tmp110, ptr %local_15, align 8
  store ptr %local_33, ptr %local_111, align 8
  %loaded_alloca111 = load ptr, ptr %local_111, align 8
  %retval112 = call i64 @move_native_vector_length(ptr @__move_rttydesc_u64, ptr %loaded_alloca111)
  store i64 %retval112, ptr %local_112, align 8
  store ptr %local_15, ptr %local_113, align 8
  %call_arg_0113 = load ptr, ptr %local_113, align 8
  %retval114 = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0113)
  store i64 %retval114, ptr %local_114, align 8
  %eq_src_0115 = load i64, ptr %local_112, align 8
  %eq_src_1116 = load i64, ptr %local_114, align 8
  %eq_dst117 = icmp eq i64 %eq_src_0115, %eq_src_1116
  store i1 %eq_dst117, ptr %local_115, align 1
  %cnd118 = load i1, ptr %local_115, align 1
  br i1 %cnd118, label %bb_25, label %bb_24

bb_25:                                            ; preds = %bb_23
  br label %bb_26

bb_24:                                            ; preds = %bb_23
  store i64 0, ptr %local_116, align 8
  %call_arg_0119 = load i64, ptr %local_116, align 8
  call void @move_rt_abort(i64 %call_arg_0119)
  unreachable

bb_26:                                            ; preds = %bb_25
  store i1 true, ptr %local_117__a, align 1
  store i8 100, ptr %local_118__b, align 1
  store i64 9999, ptr %local_119__c, align 8
  store i128 112333, ptr %local_120__d, align 8
  %4 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_bool)
  store { ptr, i64, i64 } %4, ptr %newv120, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_bool, ptr %newv120, ptr @vdesc.16)
  %reload121 = load { ptr, i64, i64 }, ptr %newv120, align 8
  store { ptr, i64, i64 } %reload121, ptr %local_121__k, align 8
  %5 = load [32 x i8], ptr @acct.addr.17, align 1
  store [32 x i8] %5, ptr %local_122__s, align 1
  %fv.0 = load i1, ptr %local_117__a, align 1
  %fv.1 = load i8, ptr %local_118__b, align 1
  %fv.2 = load i64, ptr %local_119__c, align 8
  %fv.3 = load i128, ptr %local_120__d, align 8
  %fv.4 = load { ptr, i64, i64 }, ptr %local_121__k, align 8
  %fv.5 = load [32 x i8], ptr %local_122__s, align 1
  %insert_0 = insertvalue %struct.bcs__Info undef, i1 %fv.0, 0
  %insert_1 = insertvalue %struct.bcs__Info %insert_0, i8 %fv.1, 1
  %insert_2 = insertvalue %struct.bcs__Info %insert_1, i64 %fv.2, 2
  %insert_3 = insertvalue %struct.bcs__Info %insert_2, i128 %fv.3, 3
  %insert_4 = insertvalue %struct.bcs__Info %insert_3, { ptr, i64, i64 } %fv.4, 4
  %insert_5 = insertvalue %struct.bcs__Info %insert_4, [32 x i8] %fv.5, 5
  store %struct.bcs__Info %insert_5, ptr %local_123, align 8
  %load_store_tmp122 = load %struct.bcs__Info, ptr %local_123, align 8
  store %struct.bcs__Info %load_store_tmp122, ptr %local_17, align 8
  store ptr %local_17, ptr %local_124, align 8
  %call_arg_0123 = load ptr, ptr %local_124, align 8
  %retval124 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_2KB9WoxsyioRdQ"(ptr %call_arg_0123)
  store { ptr, i64, i64 } %retval124, ptr %local_125, align 8
  %call_arg_0125 = load { ptr, i64, i64 }, ptr %local_125, align 8
  %retval126 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0125)
  store %struct.bcs__BCS %retval126, ptr %local_126, align 8
  %load_store_tmp127 = load %struct.bcs__BCS, ptr %local_126, align 8
  store %struct.bcs__BCS %load_store_tmp127, ptr %local_1, align 8
  store ptr %local_17, ptr %local_127, align 8
  %tmp = load ptr, ptr %local_127, align 8
  %fld_ref = getelementptr inbounds %struct.bcs__Info, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_128__a, align 8
  %load_deref_store_tmp1 = load ptr, ptr %local_128__a, align 8
  %load_deref_store_tmp2 = load i1, ptr %load_deref_store_tmp1, align 1
  store i1 %load_deref_store_tmp2, ptr %local_129, align 1
  store ptr %local_1, ptr %local_130, align 8
  %call_arg_0128 = load ptr, ptr %local_130, align 8
  %retval129 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0128)
  store i1 %retval129, ptr %local_131, align 1
  %eq_src_0130 = load i1, ptr %local_129, align 1
  %eq_src_1131 = load i1, ptr %local_131, align 1
  %eq_dst132 = icmp eq i1 %eq_src_0130, %eq_src_1131
  store i1 %eq_dst132, ptr %local_132, align 1
  %cnd133 = load i1, ptr %local_132, align 1
  br i1 %cnd133, label %bb_28, label %bb_27

bb_28:                                            ; preds = %bb_26
  br label %bb_29

bb_27:                                            ; preds = %bb_26
  store i64 0, ptr %local_133, align 8
  %call_arg_0134 = load i64, ptr %local_133, align 8
  call void @move_rt_abort(i64 %call_arg_0134)
  unreachable

bb_29:                                            ; preds = %bb_28
  store ptr %local_17, ptr %local_134, align 8
  %tmp135 = load ptr, ptr %local_134, align 8
  %fld_ref136 = getelementptr inbounds %struct.bcs__Info, ptr %tmp135, i32 0, i32 1
  store ptr %fld_ref136, ptr %local_135__b, align 8
  %load_deref_store_tmp1137 = load ptr, ptr %local_135__b, align 8
  %load_deref_store_tmp2138 = load i8, ptr %load_deref_store_tmp1137, align 1
  store i8 %load_deref_store_tmp2138, ptr %local_136, align 1
  store ptr %local_1, ptr %local_137, align 8
  %call_arg_0139 = load ptr, ptr %local_137, align 8
  %retval140 = call i8 @"0000000000000002_bcs_peel_u8_6d6AGS42yhTNFk"(ptr %call_arg_0139)
  store i8 %retval140, ptr %local_138, align 1
  %eq_src_0141 = load i8, ptr %local_136, align 1
  %eq_src_1142 = load i8, ptr %local_138, align 1
  %eq_dst143 = icmp eq i8 %eq_src_0141, %eq_src_1142
  store i1 %eq_dst143, ptr %local_139, align 1
  %cnd144 = load i1, ptr %local_139, align 1
  br i1 %cnd144, label %bb_31, label %bb_30

bb_31:                                            ; preds = %bb_29
  br label %bb_32

bb_30:                                            ; preds = %bb_29
  store i64 0, ptr %local_140, align 8
  %call_arg_0145 = load i64, ptr %local_140, align 8
  call void @move_rt_abort(i64 %call_arg_0145)
  unreachable

bb_32:                                            ; preds = %bb_31
  store ptr %local_17, ptr %local_141, align 8
  %tmp146 = load ptr, ptr %local_141, align 8
  %fld_ref147 = getelementptr inbounds %struct.bcs__Info, ptr %tmp146, i32 0, i32 2
  store ptr %fld_ref147, ptr %local_142__c, align 8
  %load_deref_store_tmp1148 = load ptr, ptr %local_142__c, align 8
  %load_deref_store_tmp2149 = load i64, ptr %load_deref_store_tmp1148, align 8
  store i64 %load_deref_store_tmp2149, ptr %local_143, align 8
  store ptr %local_1, ptr %local_144, align 8
  %call_arg_0150 = load ptr, ptr %local_144, align 8
  %retval151 = call i64 @"0000000000000002_bcs_peel_u64_AL793VCQ2sZbgn"(ptr %call_arg_0150)
  store i64 %retval151, ptr %local_145, align 8
  %eq_src_0152 = load i64, ptr %local_143, align 8
  %eq_src_1153 = load i64, ptr %local_145, align 8
  %eq_dst154 = icmp eq i64 %eq_src_0152, %eq_src_1153
  store i1 %eq_dst154, ptr %local_146, align 1
  %cnd155 = load i1, ptr %local_146, align 1
  br i1 %cnd155, label %bb_34, label %bb_33

bb_34:                                            ; preds = %bb_32
  br label %bb_35

bb_33:                                            ; preds = %bb_32
  store i64 0, ptr %local_147, align 8
  %call_arg_0156 = load i64, ptr %local_147, align 8
  call void @move_rt_abort(i64 %call_arg_0156)
  unreachable

bb_35:                                            ; preds = %bb_34
  store ptr %local_17, ptr %local_148, align 8
  %tmp157 = load ptr, ptr %local_148, align 8
  %fld_ref158 = getelementptr inbounds %struct.bcs__Info, ptr %tmp157, i32 0, i32 3
  store ptr %fld_ref158, ptr %local_149__d, align 8
  %load_deref_store_tmp1159 = load ptr, ptr %local_149__d, align 8
  %load_deref_store_tmp2160 = load i128, ptr %load_deref_store_tmp1159, align 8
  store i128 %load_deref_store_tmp2160, ptr %local_150, align 8
  store ptr %local_1, ptr %local_151, align 8
  %call_arg_0161 = load ptr, ptr %local_151, align 8
  %retval162 = call i128 @"0000000000000002_bcs_peel_u128_NmHT5JzgtEzTCJ"(ptr %call_arg_0161)
  store i128 %retval162, ptr %local_152, align 8
  %eq_src_0163 = load i128, ptr %local_150, align 8
  %eq_src_1164 = load i128, ptr %local_152, align 8
  %eq_dst165 = icmp eq i128 %eq_src_0163, %eq_src_1164
  store i1 %eq_dst165, ptr %local_153, align 1
  %cnd166 = load i1, ptr %local_153, align 1
  br i1 %cnd166, label %bb_37, label %bb_36

bb_37:                                            ; preds = %bb_35
  br label %bb_38

bb_36:                                            ; preds = %bb_35
  store i64 0, ptr %local_154, align 8
  %call_arg_0167 = load i64, ptr %local_154, align 8
  call void @move_rt_abort(i64 %call_arg_0167)
  unreachable

bb_38:                                            ; preds = %bb_37
  store ptr %local_1, ptr %local_155, align 8
  %call_arg_0168 = load ptr, ptr %local_155, align 8
  %retval169 = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_0168)
  store i64 %retval169, ptr %local_156, align 8
  %load_store_tmp170 = load i64, ptr %local_156, align 8
  store i64 %load_store_tmp170, ptr %local_18, align 8
  store ptr %local_17, ptr %local_157, align 8
  %tmp171 = load ptr, ptr %local_157, align 8
  %fld_ref172 = getelementptr inbounds %struct.bcs__Info, ptr %tmp171, i32 0, i32 4
  store ptr %fld_ref172, ptr %local_158__k, align 8
  %loaded_alloca173 = load ptr, ptr %local_158__k, align 8
  %retval174 = call i64 @move_native_vector_length(ptr @__move_rttydesc_bool, ptr %loaded_alloca173)
  store i64 %retval174, ptr %local_159, align 8
  %load_store_tmp175 = load i64, ptr %local_18, align 8
  store i64 %load_store_tmp175, ptr %local_160, align 8
  %eq_src_0176 = load i64, ptr %local_159, align 8
  %eq_src_1177 = load i64, ptr %local_160, align 8
  %eq_dst178 = icmp eq i64 %eq_src_0176, %eq_src_1177
  store i1 %eq_dst178, ptr %local_161, align 1
  %cnd179 = load i1, ptr %local_161, align 1
  br i1 %cnd179, label %bb_40, label %bb_39

bb_40:                                            ; preds = %bb_38
  br label %bb_41

bb_39:                                            ; preds = %bb_38
  store i64 0, ptr %local_162, align 8
  %call_arg_0180 = load i64, ptr %local_162, align 8
  call void @move_rt_abort(i64 %call_arg_0180)
  unreachable

bb_41:                                            ; preds = %bb_40
  store i64 0, ptr %local_163, align 8
  %load_store_tmp181 = load i64, ptr %local_163, align 8
  store i64 %load_store_tmp181, ptr %local_16, align 8
  br label %bb_48

bb_48:                                            ; preds = %join_bb, %bb_41
  %load_store_tmp182 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp182, ptr %local_164, align 8
  store ptr %local_17, ptr %local_165, align 8
  %tmp183 = load ptr, ptr %local_165, align 8
  %fld_ref184 = getelementptr inbounds %struct.bcs__Info, ptr %tmp183, i32 0, i32 4
  store ptr %fld_ref184, ptr %local_166__k, align 8
  %loaded_alloca185 = load ptr, ptr %local_166__k, align 8
  %retval186 = call i64 @move_native_vector_length(ptr @__move_rttydesc_bool, ptr %loaded_alloca185)
  store i64 %retval186, ptr %local_167, align 8
  %lt_src_0 = load i64, ptr %local_164, align 8
  %lt_src_1 = load i64, ptr %local_167, align 8
  %lt_dst = icmp ult i64 %lt_src_0, %lt_src_1
  store i1 %lt_dst, ptr %local_168, align 1
  %cnd187 = load i1, ptr %local_168, align 1
  br i1 %cnd187, label %bb_43, label %bb_42

bb_43:                                            ; preds = %bb_48
  br label %bb_44

bb_44:                                            ; preds = %bb_43
  store ptr %local_17, ptr %local_169, align 8
  %tmp188 = load ptr, ptr %local_169, align 8
  %fld_ref189 = getelementptr inbounds %struct.bcs__Info, ptr %tmp188, i32 0, i32 4
  store ptr %fld_ref189, ptr %local_170__k, align 8
  %load_store_tmp190 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp190, ptr %local_171, align 8
  %loaded_alloca191 = load ptr, ptr %local_170__k, align 8
  %loaded_alloca192 = load i64, ptr %local_171, align 8
  %retval193 = call ptr @move_native_vector_borrow(ptr @__move_rttydesc_bool, ptr %loaded_alloca191, i64 %loaded_alloca192)
  store ptr %retval193, ptr %local_172, align 8
  %load_deref_store_tmp1194 = load ptr, ptr %local_172, align 8
  %load_deref_store_tmp2195 = load i1, ptr %load_deref_store_tmp1194, align 1
  store i1 %load_deref_store_tmp2195, ptr %local_173, align 1
  store ptr %local_1, ptr %local_174, align 8
  %call_arg_0196 = load ptr, ptr %local_174, align 8
  %retval197 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_0196)
  store i1 %retval197, ptr %local_175, align 1
  %eq_src_0198 = load i1, ptr %local_173, align 1
  %eq_src_1199 = load i1, ptr %local_175, align 1
  %eq_dst200 = icmp eq i1 %eq_src_0198, %eq_src_1199
  store i1 %eq_dst200, ptr %local_176, align 1
  %cnd201 = load i1, ptr %local_176, align 1
  br i1 %cnd201, label %bb_46, label %bb_45

bb_46:                                            ; preds = %bb_44
  br label %bb_47

bb_45:                                            ; preds = %bb_44
  store i64 0, ptr %local_177, align 8
  %call_arg_0202 = load i64, ptr %local_177, align 8
  call void @move_rt_abort(i64 %call_arg_0202)
  unreachable

bb_47:                                            ; preds = %bb_46
  %load_store_tmp203 = load i64, ptr %local_16, align 8
  store i64 %load_store_tmp203, ptr %local_178, align 8
  store i64 1, ptr %local_179, align 8
  %add_src_0 = load i64, ptr %local_178, align 8
  %add_src_1 = load i64, ptr %local_179, align 8
  %add_dst = add i64 %add_src_0, %add_src_1
  %ovfcond = icmp ult i64 %add_dst, %add_src_0
  br i1 %ovfcond, label %then_bb, label %join_bb

then_bb:                                          ; preds = %bb_47
  call void @move_rt_abort(i64 4017)
  unreachable

join_bb:                                          ; preds = %bb_47
  store i64 %add_dst, ptr %local_180, align 8
  %load_store_tmp204 = load i64, ptr %local_180, align 8
  store i64 %load_store_tmp204, ptr %local_16, align 8
  br label %bb_48

bb_42:                                            ; preds = %bb_48
  store ptr %local_17, ptr %local_181, align 8
  %tmp205 = load ptr, ptr %local_181, align 8
  %fld_ref206 = getelementptr inbounds %struct.bcs__Info, ptr %tmp205, i32 0, i32 5
  store ptr %fld_ref206, ptr %local_182__s, align 8
  %load_deref_store_tmp1207 = load ptr, ptr %local_182__s, align 8
  %load_deref_store_tmp2208 = load [32 x i8], ptr %load_deref_store_tmp1207, align 1
  store [32 x i8] %load_deref_store_tmp2208, ptr %local_183, align 1
  store ptr %local_1, ptr %local_184, align 8
  %call_arg_0209 = load ptr, ptr %local_184, align 8
  %retval210 = call [32 x i8] @"0000000000000002_bcs_peel_address_6ieY385GfzQPhi"(ptr %call_arg_0209)
  store [32 x i8] %retval210, ptr %local_185, align 1
  %6 = call i32 @memcmp(ptr %local_183, ptr %local_185, i64 32)
  %eq_dst211 = icmp eq i32 %6, 0
  store i1 %eq_dst211, ptr %local_186, align 1
  %cnd212 = load i1, ptr %local_186, align 1
  br i1 %cnd212, label %bb_50, label %bb_49

bb_50:                                            ; preds = %bb_42
  br label %bb_51

bb_49:                                            ; preds = %bb_42
  store i64 0, ptr %local_187, align 8
  %call_arg_0213 = load i64, ptr %local_187, align 8
  call void @move_rt_abort(i64 %call_arg_0213)
  unreachable

bb_51:                                            ; preds = %bb_50
  %7 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %7, ptr %newv214, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u8, ptr %newv214, ptr @vdesc.19)
  %reload215 = load { ptr, i64, i64 }, ptr %newv214, align 8
  store { ptr, i64, i64 } %reload215, ptr %local_188, align 8
  %load_store_tmp216 = load { ptr, i64, i64 }, ptr %local_188, align 8
  store { ptr, i64, i64 } %load_store_tmp216, ptr %local_20, align 8
  store ptr %local_20, ptr %local_189, align 8
  %call_arg_0217 = load ptr, ptr %local_189, align 8
  %retval218 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_BbXdzaNHt75BkF"(ptr %call_arg_0217)
  store { ptr, i64, i64 } %retval218, ptr %local_190, align 8
  %call_arg_0219 = load { ptr, i64, i64 }, ptr %local_190, align 8
  %retval220 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0219)
  store %struct.bcs__BCS %retval220, ptr %local_191, align 8
  %load_store_tmp221 = load %struct.bcs__BCS, ptr %local_191, align 8
  store %struct.bcs__BCS %load_store_tmp221, ptr %local_2, align 8
  %load_store_tmp222 = load { ptr, i64, i64 }, ptr %local_20, align 8
  store { ptr, i64, i64 } %load_store_tmp222, ptr %local_192, align 8
  store ptr %local_2, ptr %local_193, align 8
  %call_arg_0223 = load ptr, ptr %local_193, align 8
  %retval224 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_vec_u8_7PcPmN6rdUgmA9"(ptr %call_arg_0223)
  store { ptr, i64, i64 } %retval224, ptr %local_194, align 8
  %8 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_vector_u8_, ptr %local_192, ptr %local_194)
  store i1 %8, ptr %local_195, align 1
  %cnd225 = load i1, ptr %local_195, align 1
  br i1 %cnd225, label %bb_53, label %bb_52

bb_53:                                            ; preds = %bb_51
  br label %bb_54

bb_52:                                            ; preds = %bb_51
  store i64 0, ptr %local_196, align 8
  %call_arg_0226 = load i64, ptr %local_196, align 8
  call void @move_rt_abort(i64 %call_arg_0226)
  unreachable

bb_54:                                            ; preds = %bb_53
  %9 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u8)
  store { ptr, i64, i64 } %9, ptr %newv227, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u8, ptr %newv227, ptr @vdesc.21)
  %reload228 = load { ptr, i64, i64 }, ptr %newv227, align 8
  store { ptr, i64, i64 } %reload228, ptr %local_197, align 8
  %load_store_tmp229 = load { ptr, i64, i64 }, ptr %local_197, align 8
  store { ptr, i64, i64 } %load_store_tmp229, ptr %local_21, align 8
  store ptr %local_21, ptr %local_198, align 8
  %call_arg_0230 = load ptr, ptr %local_198, align 8
  %retval231 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_eudXMbiaBkW7t2"(ptr %call_arg_0230)
  store { ptr, i64, i64 } %retval231, ptr %local_199, align 8
  %call_arg_0232 = load { ptr, i64, i64 }, ptr %local_199, align 8
  %retval233 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0232)
  store %struct.bcs__BCS %retval233, ptr %local_200, align 8
  %load_store_tmp234 = load %struct.bcs__BCS, ptr %local_200, align 8
  store %struct.bcs__BCS %load_store_tmp234, ptr %local_3, align 8
  %load_store_tmp235 = load { ptr, i64, i64 }, ptr %local_21, align 8
  store { ptr, i64, i64 } %load_store_tmp235, ptr %local_201, align 8
  store ptr %local_3, ptr %local_202, align 8
  %call_arg_0236 = load ptr, ptr %local_202, align 8
  %retval237 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u8_4z7Az3QuZfeaFB"(ptr %call_arg_0236)
  store { ptr, i64, i64 } %retval237, ptr %local_203, align 8
  %10 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_u8, ptr %local_201, ptr %local_203)
  store i1 %10, ptr %local_204, align 1
  %cnd238 = load i1, ptr %local_204, align 1
  br i1 %cnd238, label %bb_56, label %bb_55

bb_56:                                            ; preds = %bb_54
  br label %bb_57

bb_55:                                            ; preds = %bb_54
  store i64 0, ptr %local_205, align 8
  %call_arg_0239 = load i64, ptr %local_205, align 8
  call void @move_rt_abort(i64 %call_arg_0239)
  unreachable

bb_57:                                            ; preds = %bb_56
  %11 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %11, ptr %newv240, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u64, ptr %newv240, ptr @vdesc.23)
  %reload241 = load { ptr, i64, i64 }, ptr %newv240, align 8
  store { ptr, i64, i64 } %reload241, ptr %local_206, align 8
  %load_store_tmp242 = load { ptr, i64, i64 }, ptr %local_206, align 8
  store { ptr, i64, i64 } %load_store_tmp242, ptr %local_22, align 8
  store ptr %local_22, ptr %local_207, align 8
  %call_arg_0243 = load ptr, ptr %local_207, align 8
  %retval244 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_5WzzmfEmjB8Pdw"(ptr %call_arg_0243)
  store { ptr, i64, i64 } %retval244, ptr %local_208, align 8
  %call_arg_0245 = load { ptr, i64, i64 }, ptr %local_208, align 8
  %retval246 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0245)
  store %struct.bcs__BCS %retval246, ptr %local_209, align 8
  %load_store_tmp247 = load %struct.bcs__BCS, ptr %local_209, align 8
  store %struct.bcs__BCS %load_store_tmp247, ptr %local_4, align 8
  %load_store_tmp248 = load { ptr, i64, i64 }, ptr %local_22, align 8
  store { ptr, i64, i64 } %load_store_tmp248, ptr %local_210, align 8
  store ptr %local_4, ptr %local_211, align 8
  %call_arg_0249 = load ptr, ptr %local_211, align 8
  %retval250 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u64_DNtE2HaiuV6VEn"(ptr %call_arg_0249)
  store { ptr, i64, i64 } %retval250, ptr %local_212, align 8
  %12 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_u64, ptr %local_210, ptr %local_212)
  store i1 %12, ptr %local_213, align 1
  %cnd251 = load i1, ptr %local_213, align 1
  br i1 %cnd251, label %bb_59, label %bb_58

bb_59:                                            ; preds = %bb_57
  br label %bb_60

bb_58:                                            ; preds = %bb_57
  store i64 0, ptr %local_214, align 8
  %call_arg_0252 = load i64, ptr %local_214, align 8
  call void @move_rt_abort(i64 %call_arg_0252)
  unreachable

bb_60:                                            ; preds = %bb_59
  %13 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u128)
  store { ptr, i64, i64 } %13, ptr %newv253, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u128, ptr %newv253, ptr @vdesc.25)
  %reload254 = load { ptr, i64, i64 }, ptr %newv253, align 8
  store { ptr, i64, i64 } %reload254, ptr %local_215, align 8
  %load_store_tmp255 = load { ptr, i64, i64 }, ptr %local_215, align 8
  store { ptr, i64, i64 } %load_store_tmp255, ptr %local_23, align 8
  store ptr %local_23, ptr %local_216, align 8
  %call_arg_0256 = load ptr, ptr %local_216, align 8
  %retval257 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_BneHuqjWsnGTzt"(ptr %call_arg_0256)
  store { ptr, i64, i64 } %retval257, ptr %local_217, align 8
  %call_arg_0258 = load { ptr, i64, i64 }, ptr %local_217, align 8
  %retval259 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0258)
  store %struct.bcs__BCS %retval259, ptr %local_218, align 8
  %load_store_tmp260 = load %struct.bcs__BCS, ptr %local_218, align 8
  store %struct.bcs__BCS %load_store_tmp260, ptr %local_5, align 8
  %load_store_tmp261 = load { ptr, i64, i64 }, ptr %local_23, align 8
  store { ptr, i64, i64 } %load_store_tmp261, ptr %local_219, align 8
  store ptr %local_5, ptr %local_220, align 8
  %call_arg_0262 = load ptr, ptr %local_220, align 8
  %retval263 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_u128_FkuW25NBimnBdr"(ptr %call_arg_0262)
  store { ptr, i64, i64 } %retval263, ptr %local_221, align 8
  %14 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_u128, ptr %local_219, ptr %local_221)
  store i1 %14, ptr %local_222, align 1
  %cnd264 = load i1, ptr %local_222, align 1
  br i1 %cnd264, label %bb_62, label %bb_61

bb_62:                                            ; preds = %bb_60
  br label %bb_63

bb_61:                                            ; preds = %bb_60
  store i64 0, ptr %local_223, align 8
  %call_arg_0265 = load i64, ptr %local_223, align 8
  call void @move_rt_abort(i64 %call_arg_0265)
  unreachable

bb_63:                                            ; preds = %bb_62
  %15 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_bool)
  store { ptr, i64, i64 } %15, ptr %newv266, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_bool, ptr %newv266, ptr @vdesc.27)
  %reload267 = load { ptr, i64, i64 }, ptr %newv266, align 8
  store { ptr, i64, i64 } %reload267, ptr %local_224, align 8
  %load_store_tmp268 = load { ptr, i64, i64 }, ptr %local_224, align 8
  store { ptr, i64, i64 } %load_store_tmp268, ptr %local_24, align 8
  store ptr %local_24, ptr %local_225, align 8
  %call_arg_0269 = load ptr, ptr %local_225, align 8
  %retval270 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_8QkbRJ3bz4rnNL"(ptr %call_arg_0269)
  store { ptr, i64, i64 } %retval270, ptr %local_226, align 8
  %call_arg_0271 = load { ptr, i64, i64 }, ptr %local_226, align 8
  %retval272 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0271)
  store %struct.bcs__BCS %retval272, ptr %local_227, align 8
  %load_store_tmp273 = load %struct.bcs__BCS, ptr %local_227, align 8
  store %struct.bcs__BCS %load_store_tmp273, ptr %local_6, align 8
  %load_store_tmp274 = load { ptr, i64, i64 }, ptr %local_24, align 8
  store { ptr, i64, i64 } %load_store_tmp274, ptr %local_228, align 8
  store ptr %local_6, ptr %local_229, align 8
  %call_arg_0275 = load ptr, ptr %local_229, align 8
  %retval276 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_bool_55BoGbJggFCRbo"(ptr %call_arg_0275)
  store { ptr, i64, i64 } %retval276, ptr %local_230, align 8
  %16 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_bool, ptr %local_228, ptr %local_230)
  store i1 %16, ptr %local_231, align 1
  %cnd277 = load i1, ptr %local_231, align 1
  br i1 %cnd277, label %bb_65, label %bb_64

bb_65:                                            ; preds = %bb_63
  br label %bb_66

bb_64:                                            ; preds = %bb_63
  store i64 0, ptr %local_232, align 8
  %call_arg_0278 = load i64, ptr %local_232, align 8
  call void @move_rt_abort(i64 %call_arg_0278)
  unreachable

bb_66:                                            ; preds = %bb_65
  %17 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_address)
  store { ptr, i64, i64 } %17, ptr %newv279, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_address, ptr %newv279, ptr @vdesc.29)
  %reload280 = load { ptr, i64, i64 }, ptr %newv279, align 8
  store { ptr, i64, i64 } %reload280, ptr %local_233, align 8
  %load_store_tmp281 = load { ptr, i64, i64 }, ptr %local_233, align 8
  store { ptr, i64, i64 } %load_store_tmp281, ptr %local_25, align 8
  store ptr %local_25, ptr %local_234, align 8
  %call_arg_0282 = load ptr, ptr %local_234, align 8
  %retval283 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_A65EFLn59ufQ8Z"(ptr %call_arg_0282)
  store { ptr, i64, i64 } %retval283, ptr %local_235, align 8
  %call_arg_0284 = load { ptr, i64, i64 }, ptr %local_235, align 8
  %retval285 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_0284)
  store %struct.bcs__BCS %retval285, ptr %local_236, align 8
  %load_store_tmp286 = load %struct.bcs__BCS, ptr %local_236, align 8
  store %struct.bcs__BCS %load_store_tmp286, ptr %local_7, align 8
  %load_store_tmp287 = load { ptr, i64, i64 }, ptr %local_25, align 8
  store { ptr, i64, i64 } %load_store_tmp287, ptr %local_237, align 8
  store ptr %local_7, ptr %local_238, align 8
  %call_arg_0288 = load ptr, ptr %local_238, align 8
  %retval289 = call { ptr, i64, i64 } @"0000000000000002_bcs_peel_vec_addres_7uWkV96TiaFJqe"(ptr %call_arg_0288)
  store { ptr, i64, i64 } %retval289, ptr %local_239, align 8
  %18 = call i1 @move_rt_vec_cmp_eq(ptr @__move_rttydesc_address, ptr %local_237, ptr %local_239)
  store i1 %18, ptr %local_240, align 1
  %cnd290 = load i1, ptr %local_240, align 1
  br i1 %cnd290, label %bb_68, label %bb_67

bb_68:                                            ; preds = %bb_66
  br label %bb_69

bb_67:                                            ; preds = %bb_66
  store i64 0, ptr %local_241, align 8
  %call_arg_0291 = load i64, ptr %local_241, align 8
  call void @move_rt_abort(i64 %call_arg_0291)
  unreachable

bb_69:                                            ; preds = %bb_68
  ret void
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6z6DhCEHM2cfNu"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_address, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

declare { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr, ptr)

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_4uemf4C6AKb21F"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_bool, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_27yEv5Fct1GqPE"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_u8, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6NhXVWFo2aWmc9"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_u64, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_8jFATsXF3wZTF4"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_u128, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_5WzzmfEmjB8Pdw"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_u64_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_2KB9WoxsyioRdQ"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_bcs__Info, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

declare ptr @move_native_vector_borrow(ptr, ptr, i64)

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_BbXdzaNHt75BkF"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_vector_u8__, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_eudXMbiaBkW7t2"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_u8_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_BneHuqjWsnGTzt"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_u128_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_8QkbRJ3bz4rnNL"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_bool_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_A65EFLn59ufQ8Z"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_vector_address_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private void @"0000000000000002_bcs_test_bool_fail_3nbaH6Xek5wWLQ"() {
entry:
  %local_0 = alloca i8, align 1
  %local_1 = alloca %struct.bcs__BCS, align 8
  %local_2 = alloca i8, align 1
  %local_3 = alloca ptr, align 8
  %local_4 = alloca { ptr, i64, i64 }, align 8
  %local_5 = alloca %struct.bcs__BCS, align 8
  %local_6 = alloca ptr, align 8
  %local_7 = alloca i1, align 1
  store i8 10, ptr %local_2, align 1
  %load_store_tmp = load i8, ptr %local_2, align 1
  store i8 %load_store_tmp, ptr %local_0, align 1
  store ptr %local_0, ptr %local_3, align 8
  %call_arg_0 = load ptr, ptr %local_3, align 8
  %retval = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_27yEv5Fct1GqPE"(ptr %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_4, align 8
  %call_arg_01 = load { ptr, i64, i64 }, ptr %local_4, align 8
  %retval2 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_01)
  store %struct.bcs__BCS %retval2, ptr %local_5, align 8
  %load_store_tmp3 = load %struct.bcs__BCS, ptr %local_5, align 8
  store %struct.bcs__BCS %load_store_tmp3, ptr %local_1, align 8
  store ptr %local_1, ptr %local_6, align 8
  %call_arg_04 = load ptr, ptr %local_6, align 8
  %retval5 = call i1 @"0000000000000002_bcs_peel_bool_3uzNfP9g7KxJxU"(ptr %call_arg_04)
  store i1 %retval5, ptr %local_7, align 1
  ret void
}

define private void @"0000000000000002_bcs_test_option_CTTJUgCeRuG6qd"() {
entry:
  %local_0 = alloca %struct.bcs__BCS, align 8
  %local_1 = alloca %struct.bcs__BCS, align 8
  %local_2 = alloca %struct.bcs__BCS, align 8
  %local_3 = alloca %struct.bcs__BCS, align 8
  %local_4 = alloca %struct.bcs__BCS, align 8
  %local_5 = alloca %struct.bcs__BCS, align 8
  %local_6 = alloca %struct.option__Option_bool_, align 8
  %local_7 = alloca %struct.option__Option_u8_, align 8
  %local_8 = alloca %struct.option__Option_u64_, align 8
  %local_9 = alloca %struct.option__Option_u128_, align 8
  %local_10 = alloca %struct.option__Option_address_, align 8
  %local_11 = alloca %struct.option__Option_bool_, align 8
  %local_12 = alloca i1, align 1
  %local_13 = alloca %struct.option__Option_bool_, align 8
  %local_14 = alloca ptr, align 8
  %local_15 = alloca { ptr, i64, i64 }, align 8
  %local_16 = alloca %struct.bcs__BCS, align 8
  %local_17 = alloca %struct.option__Option_bool_, align 8
  %local_18 = alloca ptr, align 8
  %local_19 = alloca %struct.option__Option_bool_, align 8
  %local_20 = alloca i1, align 1
  %local_21 = alloca i64, align 8
  %local_22 = alloca i8, align 1
  %local_23 = alloca %struct.option__Option_u8_, align 8
  %local_24 = alloca ptr, align 8
  %local_25 = alloca { ptr, i64, i64 }, align 8
  %local_26 = alloca %struct.bcs__BCS, align 8
  %local_27 = alloca %struct.option__Option_u8_, align 8
  %local_28 = alloca ptr, align 8
  %local_29 = alloca %struct.option__Option_u8_, align 8
  %local_30 = alloca i1, align 1
  %local_31 = alloca i64, align 8
  %local_32 = alloca i64, align 8
  %local_33 = alloca %struct.option__Option_u64_, align 8
  %local_34 = alloca ptr, align 8
  %local_35 = alloca { ptr, i64, i64 }, align 8
  %local_36 = alloca %struct.bcs__BCS, align 8
  %local_37 = alloca %struct.option__Option_u64_, align 8
  %local_38 = alloca ptr, align 8
  %local_39 = alloca %struct.option__Option_u64_, align 8
  %local_40 = alloca i1, align 1
  %local_41 = alloca i64, align 8
  %local_42 = alloca i128, align 8
  %local_43 = alloca %struct.option__Option_u128_, align 8
  %local_44 = alloca ptr, align 8
  %local_45 = alloca { ptr, i64, i64 }, align 8
  %local_46 = alloca %struct.bcs__BCS, align 8
  %local_47 = alloca %struct.option__Option_u128_, align 8
  %local_48 = alloca ptr, align 8
  %local_49 = alloca %struct.option__Option_u128_, align 8
  %local_50 = alloca i1, align 1
  %local_51 = alloca i64, align 8
  %local_52 = alloca [32 x i8], align 1
  %local_53 = alloca %struct.option__Option_address_, align 8
  %local_54 = alloca ptr, align 8
  %local_55 = alloca { ptr, i64, i64 }, align 8
  %local_56 = alloca %struct.bcs__BCS, align 8
  %local_57 = alloca %struct.option__Option_address_, align 8
  %local_58 = alloca ptr, align 8
  %local_59 = alloca %struct.option__Option_address_, align 8
  %local_60 = alloca i1, align 1
  %local_61 = alloca i64, align 8
  %local_62 = alloca %struct.option__Option_bool_, align 8
  %local_63 = alloca ptr, align 8
  %local_64 = alloca { ptr, i64, i64 }, align 8
  %local_65 = alloca %struct.bcs__BCS, align 8
  %local_66 = alloca %struct.option__Option_bool_, align 8
  %local_67 = alloca ptr, align 8
  %local_68 = alloca %struct.option__Option_bool_, align 8
  %local_69 = alloca i1, align 1
  %local_70 = alloca i64, align 8
  store i1 true, ptr %local_12, align 1
  %call_arg_0 = load i1, ptr %local_12, align 1
  %retval = call %struct.option__Option_bool_ @"0000000000000001_option_some_Ao9SKJoXum3yE1"(i1 %call_arg_0)
  store %struct.option__Option_bool_ %retval, ptr %local_13, align 8
  %load_store_tmp = load %struct.option__Option_bool_, ptr %local_13, align 8
  store %struct.option__Option_bool_ %load_store_tmp, ptr %local_6, align 8
  store ptr %local_6, ptr %local_14, align 8
  %call_arg_01 = load ptr, ptr %local_14, align 8
  %retval2 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_G6s6Uuxhs2JvCy"(ptr %call_arg_01)
  store { ptr, i64, i64 } %retval2, ptr %local_15, align 8
  %call_arg_03 = load { ptr, i64, i64 }, ptr %local_15, align 8
  %retval4 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_03)
  store %struct.bcs__BCS %retval4, ptr %local_16, align 8
  %load_store_tmp5 = load %struct.bcs__BCS, ptr %local_16, align 8
  store %struct.bcs__BCS %load_store_tmp5, ptr %local_0, align 8
  store ptr %local_0, ptr %local_18, align 8
  %call_arg_06 = load ptr, ptr %local_18, align 8
  %retval7 = call %struct.option__Option_bool_ @"0000000000000002_bcs_peel_option_boo_4RJsKiXKvzRAXW"(ptr %call_arg_06)
  store %struct.option__Option_bool_ %retval7, ptr %local_19, align 8
  %0 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_bool_, ptr %local_6, ptr %local_19)
  store i1 %0, ptr %local_20, align 1
  %cnd = load i1, ptr %local_20, align 1
  br i1 %cnd, label %bb_1, label %bb_0

bb_1:                                             ; preds = %entry
  br label %bb_2

bb_0:                                             ; preds = %entry
  store i64 0, ptr %local_21, align 8
  %call_arg_08 = load i64, ptr %local_21, align 8
  call void @move_rt_abort(i64 %call_arg_08)
  unreachable

bb_2:                                             ; preds = %bb_1
  store i8 10, ptr %local_22, align 1
  %call_arg_09 = load i8, ptr %local_22, align 1
  %retval10 = call %struct.option__Option_u8_ @"0000000000000001_option_some_xnTx4LiMbuArQQ"(i8 %call_arg_09)
  store %struct.option__Option_u8_ %retval10, ptr %local_23, align 8
  %load_store_tmp11 = load %struct.option__Option_u8_, ptr %local_23, align 8
  store %struct.option__Option_u8_ %load_store_tmp11, ptr %local_7, align 8
  store ptr %local_7, ptr %local_24, align 8
  %call_arg_012 = load ptr, ptr %local_24, align 8
  %retval13 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_34VWcXYqydUD6L"(ptr %call_arg_012)
  store { ptr, i64, i64 } %retval13, ptr %local_25, align 8
  %call_arg_014 = load { ptr, i64, i64 }, ptr %local_25, align 8
  %retval15 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_014)
  store %struct.bcs__BCS %retval15, ptr %local_26, align 8
  %load_store_tmp16 = load %struct.bcs__BCS, ptr %local_26, align 8
  store %struct.bcs__BCS %load_store_tmp16, ptr %local_1, align 8
  store ptr %local_1, ptr %local_28, align 8
  %call_arg_017 = load ptr, ptr %local_28, align 8
  %retval18 = call %struct.option__Option_u8_ @"0000000000000002_bcs_peel_option_u8_CHXhFou58tDHFw"(ptr %call_arg_017)
  store %struct.option__Option_u8_ %retval18, ptr %local_29, align 8
  %1 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_u8_, ptr %local_7, ptr %local_29)
  store i1 %1, ptr %local_30, align 1
  %cnd19 = load i1, ptr %local_30, align 1
  br i1 %cnd19, label %bb_4, label %bb_3

bb_4:                                             ; preds = %bb_2
  br label %bb_5

bb_3:                                             ; preds = %bb_2
  store i64 0, ptr %local_31, align 8
  %call_arg_020 = load i64, ptr %local_31, align 8
  call void @move_rt_abort(i64 %call_arg_020)
  unreachable

bb_5:                                             ; preds = %bb_4
  store i64 10000, ptr %local_32, align 8
  %call_arg_021 = load i64, ptr %local_32, align 8
  %retval22 = call %struct.option__Option_u64_ @"0000000000000001_option_some_4zz2TymghHW1fs"(i64 %call_arg_021)
  store %struct.option__Option_u64_ %retval22, ptr %local_33, align 8
  %load_store_tmp23 = load %struct.option__Option_u64_, ptr %local_33, align 8
  store %struct.option__Option_u64_ %load_store_tmp23, ptr %local_8, align 8
  store ptr %local_8, ptr %local_34, align 8
  %call_arg_024 = load ptr, ptr %local_34, align 8
  %retval25 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6tpUBfguzJhbz8"(ptr %call_arg_024)
  store { ptr, i64, i64 } %retval25, ptr %local_35, align 8
  %call_arg_026 = load { ptr, i64, i64 }, ptr %local_35, align 8
  %retval27 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_026)
  store %struct.bcs__BCS %retval27, ptr %local_36, align 8
  %load_store_tmp28 = load %struct.bcs__BCS, ptr %local_36, align 8
  store %struct.bcs__BCS %load_store_tmp28, ptr %local_2, align 8
  store ptr %local_2, ptr %local_38, align 8
  %call_arg_029 = load ptr, ptr %local_38, align 8
  %retval30 = call %struct.option__Option_u64_ @"0000000000000002_bcs_peel_option_u64_3WJk1T5bFj4c67"(ptr %call_arg_029)
  store %struct.option__Option_u64_ %retval30, ptr %local_39, align 8
  %2 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_u64_, ptr %local_8, ptr %local_39)
  store i1 %2, ptr %local_40, align 1
  %cnd31 = load i1, ptr %local_40, align 1
  br i1 %cnd31, label %bb_7, label %bb_6

bb_7:                                             ; preds = %bb_5
  br label %bb_8

bb_6:                                             ; preds = %bb_5
  store i64 0, ptr %local_41, align 8
  %call_arg_032 = load i64, ptr %local_41, align 8
  call void @move_rt_abort(i64 %call_arg_032)
  unreachable

bb_8:                                             ; preds = %bb_7
  store i128 10000999999, ptr %local_42, align 8
  %call_arg_033 = load i128, ptr %local_42, align 8
  %retval34 = call %struct.option__Option_u128_ @"0000000000000001_option_some_7TwgxN8n15ac7N"(i128 %call_arg_033)
  store %struct.option__Option_u128_ %retval34, ptr %local_43, align 8
  %load_store_tmp35 = load %struct.option__Option_u128_, ptr %local_43, align 8
  store %struct.option__Option_u128_ %load_store_tmp35, ptr %local_9, align 8
  store ptr %local_9, ptr %local_44, align 8
  %call_arg_036 = load ptr, ptr %local_44, align 8
  %retval37 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_42cyBZkxm74pJ6"(ptr %call_arg_036)
  store { ptr, i64, i64 } %retval37, ptr %local_45, align 8
  %call_arg_038 = load { ptr, i64, i64 }, ptr %local_45, align 8
  %retval39 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_038)
  store %struct.bcs__BCS %retval39, ptr %local_46, align 8
  %load_store_tmp40 = load %struct.bcs__BCS, ptr %local_46, align 8
  store %struct.bcs__BCS %load_store_tmp40, ptr %local_3, align 8
  store ptr %local_3, ptr %local_48, align 8
  %call_arg_041 = load ptr, ptr %local_48, align 8
  %retval42 = call %struct.option__Option_u128_ @"0000000000000002_bcs_peel_option_u12_C6eBmktECftBLv"(ptr %call_arg_041)
  store %struct.option__Option_u128_ %retval42, ptr %local_49, align 8
  %3 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_u128_, ptr %local_9, ptr %local_49)
  store i1 %3, ptr %local_50, align 1
  %cnd43 = load i1, ptr %local_50, align 1
  br i1 %cnd43, label %bb_10, label %bb_9

bb_10:                                            ; preds = %bb_8
  br label %bb_11

bb_9:                                             ; preds = %bb_8
  store i64 0, ptr %local_51, align 8
  %call_arg_044 = load i64, ptr %local_51, align 8
  call void @move_rt_abort(i64 %call_arg_044)
  unreachable

bb_11:                                            ; preds = %bb_10
  %4 = load [32 x i8], ptr @acct.addr.34, align 1
  store [32 x i8] %4, ptr %local_52, align 1
  %call_arg_045 = load [32 x i8], ptr %local_52, align 1
  %retval46 = call %struct.option__Option_address_ @"0000000000000001_option_some_CDdPcTrWutT5hX"([32 x i8] %call_arg_045)
  store %struct.option__Option_address_ %retval46, ptr %local_53, align 8
  %load_store_tmp47 = load %struct.option__Option_address_, ptr %local_53, align 8
  store %struct.option__Option_address_ %load_store_tmp47, ptr %local_10, align 8
  store ptr %local_10, ptr %local_54, align 8
  %call_arg_048 = load ptr, ptr %local_54, align 8
  %retval49 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_F4VKBm8kUmngog"(ptr %call_arg_048)
  store { ptr, i64, i64 } %retval49, ptr %local_55, align 8
  %call_arg_050 = load { ptr, i64, i64 }, ptr %local_55, align 8
  %retval51 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_050)
  store %struct.bcs__BCS %retval51, ptr %local_56, align 8
  %load_store_tmp52 = load %struct.bcs__BCS, ptr %local_56, align 8
  store %struct.bcs__BCS %load_store_tmp52, ptr %local_4, align 8
  store ptr %local_4, ptr %local_58, align 8
  %call_arg_053 = load ptr, ptr %local_58, align 8
  %retval54 = call %struct.option__Option_address_ @"0000000000000002_bcs_peel_option_add_3CPk1XLtV1YCnh"(ptr %call_arg_053)
  store %struct.option__Option_address_ %retval54, ptr %local_59, align 8
  %5 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_address_, ptr %local_10, ptr %local_59)
  store i1 %5, ptr %local_60, align 1
  %cnd55 = load i1, ptr %local_60, align 1
  br i1 %cnd55, label %bb_13, label %bb_12

bb_13:                                            ; preds = %bb_11
  br label %bb_14

bb_12:                                            ; preds = %bb_11
  store i64 0, ptr %local_61, align 8
  %call_arg_056 = load i64, ptr %local_61, align 8
  call void @move_rt_abort(i64 %call_arg_056)
  unreachable

bb_14:                                            ; preds = %bb_13
  %retval57 = call %struct.option__Option_bool_ @"0000000000000001_option_none_HcJFTKMJvLKwdo"()
  store %struct.option__Option_bool_ %retval57, ptr %local_62, align 8
  %load_store_tmp58 = load %struct.option__Option_bool_, ptr %local_62, align 8
  store %struct.option__Option_bool_ %load_store_tmp58, ptr %local_11, align 8
  store ptr %local_11, ptr %local_63, align 8
  %call_arg_059 = load ptr, ptr %local_63, align 8
  %retval60 = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_G6s6Uuxhs2JvCy"(ptr %call_arg_059)
  store { ptr, i64, i64 } %retval60, ptr %local_64, align 8
  %call_arg_061 = load { ptr, i64, i64 }, ptr %local_64, align 8
  %retval62 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_061)
  store %struct.bcs__BCS %retval62, ptr %local_65, align 8
  %load_store_tmp63 = load %struct.bcs__BCS, ptr %local_65, align 8
  store %struct.bcs__BCS %load_store_tmp63, ptr %local_5, align 8
  store ptr %local_5, ptr %local_67, align 8
  %call_arg_064 = load ptr, ptr %local_67, align 8
  %retval65 = call %struct.option__Option_bool_ @"0000000000000002_bcs_peel_option_boo_4RJsKiXKvzRAXW"(ptr %call_arg_064)
  store %struct.option__Option_bool_ %retval65, ptr %local_68, align 8
  %6 = call i1 @move_rt_struct_cmp_eq(ptr @__move_rttydesc_option__Option_bool_, ptr %local_11, ptr %local_68)
  store i1 %6, ptr %local_69, align 1
  %cnd66 = load i1, ptr %local_69, align 1
  br i1 %cnd66, label %bb_16, label %bb_15

bb_16:                                            ; preds = %bb_14
  br label %bb_17

bb_15:                                            ; preds = %bb_14
  store i64 0, ptr %local_70, align 8
  %call_arg_067 = load i64, ptr %local_70, align 8
  call void @move_rt_abort(i64 %call_arg_067)
  unreachable

bb_17:                                            ; preds = %bb_16
  ret void
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_G6s6Uuxhs2JvCy"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_option__Option_bool_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_34VWcXYqydUD6L"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_option__Option_u8_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_6tpUBfguzJhbz8"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_option__Option_u64_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_42cyBZkxm74pJ6"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_option__Option_u128_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_F4VKBm8kUmngog"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %loaded_alloca = load ptr, ptr %local_1, align 8
  %retval = call { ptr, i64, i64 } @move_native_bcs_to_bytes(ptr @__move_rttydesc_option__Option_address_, ptr %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_2, align 8
  %retval1 = load { ptr, i64, i64 }, ptr %local_2, align 8
  ret { ptr, i64, i64 } %retval1
}

define private void @"0000000000000002_bcs_test_uleb_len_f_6tBQk9xLoTiiHV"() {
entry:
  %newv = alloca { ptr, i64, i64 }, align 8
  %local_0 = alloca %struct.bcs__BCS, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2 = alloca { ptr, i64, i64 }, align 8
  %local_3 = alloca ptr, align 8
  %local_4 = alloca { ptr, i64, i64 }, align 8
  %local_5 = alloca %struct.bcs__BCS, align 8
  %local_6 = alloca ptr, align 8
  %local_7 = alloca i64, align 8
  %local_8 = alloca i64, align 8
  %0 = call { ptr, i64, i64 } @move_rt_vec_empty(ptr @__move_rttydesc_u64)
  store { ptr, i64, i64 } %0, ptr %newv, align 8
  call void @move_rt_vec_copy(ptr @__move_rttydesc_u64, ptr %newv, ptr @vdesc.37)
  %reload = load { ptr, i64, i64 }, ptr %newv, align 8
  store { ptr, i64, i64 } %reload, ptr %local_2, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_2, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  store ptr %local_1, ptr %local_3, align 8
  %call_arg_0 = load ptr, ptr %local_3, align 8
  %retval = call { ptr, i64, i64 } @"0000000000000002_bcs_to_bytes_5WzzmfEmjB8Pdw"(ptr %call_arg_0)
  store { ptr, i64, i64 } %retval, ptr %local_4, align 8
  %call_arg_01 = load { ptr, i64, i64 }, ptr %local_4, align 8
  %retval2 = call %struct.bcs__BCS @"0000000000000002_bcs_new_FBTBR4geaEnK8K"({ ptr, i64, i64 } %call_arg_01)
  store %struct.bcs__BCS %retval2, ptr %local_5, align 8
  %load_store_tmp3 = load %struct.bcs__BCS, ptr %local_5, align 8
  store %struct.bcs__BCS %load_store_tmp3, ptr %local_0, align 8
  store ptr %local_0, ptr %local_6, align 8
  %call_arg_04 = load ptr, ptr %local_6, align 8
  %retval5 = call i64 @"0000000000000002_bcs_peel_vec_length_HNqBjL6pYANzcQ"(ptr %call_arg_04)
  store i64 %retval5, ptr %local_7, align 8
  store i64 2, ptr %local_8, align 8
  %call_arg_06 = load i64, ptr %local_8, align 8
  call void @move_rt_abort(i64 %call_arg_06)
  unreachable
}

declare void @move_rt_vec_destroy(ptr nonnull readonly dereferenceable(32), ptr)

; Function Attrs: cold noreturn
declare void @move_rt_abort(i64) #0

declare { ptr, i64, i64 } @move_rt_vec_empty(ptr nonnull readonly dereferenceable(32))

declare void @move_rt_vec_copy(ptr nonnull readonly dereferenceable(32), ptr nonnull dereferenceable(24), ptr nonnull readonly dereferenceable(24))

declare i1 @move_rt_vec_cmp_eq(ptr nonnull readonly dereferenceable(32), ptr nonnull readonly dereferenceable(24), ptr nonnull readonly dereferenceable(24))

declare i1 @move_rt_struct_cmp_eq(ptr nonnull readonly dereferenceable(32), ptr nonnull readonly, ptr nonnull readonly)

attributes #0 = { cold noreturn }
