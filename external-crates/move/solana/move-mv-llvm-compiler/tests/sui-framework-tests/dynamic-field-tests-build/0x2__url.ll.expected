; ModuleID = '0x2__url'
source_filename = "../../../../../../crates/sui-framework/packages/sui-framework/sources/url.move"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "sbf-solana-solana"

%__move_rt_type = type { { ptr, i64 }, i64, ptr }
%struct.ascii__String = type { { ptr, i64, i64 } }
%struct.url__Url = type { %struct.ascii__String }

@__move_rttydesc_signer = private unnamed_addr constant %__move_rt_type { { ptr, i64 } { ptr @__move_rttydesc_signer_name, i64 6 }, i64 9, ptr @__move_rttydesc_NOTHING_info }
@__move_rttydesc_signer_name = private unnamed_addr constant [6 x i8] c"signer"
@__move_rttydesc_NOTHING_info = private unnamed_addr constant i8 -1

declare i32 @memcmp(ptr, ptr, i64)

define void @"0000000000000002_url_unit_test_poiso_9EKFs4NRsu3r5Y"() {
entry:
  %local_0 = alloca i64, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  store i64 0, ptr %local_0, align 8
  %loaded_alloca = load i64, ptr %local_0, align 8
  %retval = call { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64 %loaded_alloca)
  store { ptr, i64, i64 } %retval, ptr %local_1, align 8
  call void @move_rt_vec_destroy(ptr @__move_rttydesc_signer, ptr %local_1)
  ret void
}

declare { ptr, i64, i64 } @move_native_unit_test_create_signers_for_testing(i64)

define %struct.ascii__String @"0000000000000002_url_inner_url_HxFiamyfCjXvo7"(ptr nonnull readonly %0) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca ptr, align 8
  %local_2__url = alloca ptr, align 8
  %local_3 = alloca %struct.ascii__String, align 8
  store ptr %0, ptr %local_0, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_1, align 8
  %tmp = load ptr, ptr %local_1, align 8
  %fld_ref = getelementptr inbounds %struct.url__Url, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_2__url, align 8
  %load_deref_store_tmp1 = load ptr, ptr %local_2__url, align 8
  %load_deref_store_tmp2 = load %struct.ascii__String, ptr %load_deref_store_tmp1, align 8
  store %struct.ascii__String %load_deref_store_tmp2, ptr %local_3, align 8
  %retval = load %struct.ascii__String, ptr %local_3, align 8
  ret %struct.ascii__String %retval
}

define %struct.url__Url @"0000000000000002_url_new_unsafe_6bCzdNM514ySB1"(%struct.ascii__String %0) {
entry:
  %local_0 = alloca %struct.ascii__String, align 8
  %local_1__url = alloca %struct.ascii__String, align 8
  %local_2 = alloca %struct.url__Url, align 8
  store %struct.ascii__String %0, ptr %local_0, align 8
  %fv.0 = load %struct.ascii__String, ptr %local_0, align 8
  %insert_0 = insertvalue %struct.url__Url undef, %struct.ascii__String %fv.0, 0
  store %struct.url__Url %insert_0, ptr %local_2, align 8
  %retval = load %struct.url__Url, ptr %local_2, align 8
  ret %struct.url__Url %retval
}

define %struct.url__Url @"0000000000000002_url_new_unsafe_from_95JWksJpbTeWwW"({ ptr, i64, i64 } %0) {
entry:
  %local_0 = alloca { ptr, i64, i64 }, align 8
  %local_1 = alloca { ptr, i64, i64 }, align 8
  %local_2__url = alloca %struct.ascii__String, align 8
  %local_3 = alloca %struct.url__Url, align 8
  store { ptr, i64, i64 } %0, ptr %local_0, align 8
  %load_store_tmp = load { ptr, i64, i64 }, ptr %local_0, align 8
  store { ptr, i64, i64 } %load_store_tmp, ptr %local_1, align 8
  %call_arg_0 = load { ptr, i64, i64 }, ptr %local_1, align 8
  %retval = call %struct.ascii__String @"0000000000000001_ascii_string_5ZneJ22oLb5aDc"({ ptr, i64, i64 } %call_arg_0)
  store %struct.ascii__String %retval, ptr %local_2__url, align 8
  %fv.0 = load %struct.ascii__String, ptr %local_2__url, align 8
  %insert_0 = insertvalue %struct.url__Url undef, %struct.ascii__String %fv.0, 0
  store %struct.url__Url %insert_0, ptr %local_3, align 8
  %retval1 = load %struct.url__Url, ptr %local_3, align 8
  ret %struct.url__Url %retval1
}

declare %struct.ascii__String @"0000000000000001_ascii_string_5ZneJ22oLb5aDc"({ ptr, i64, i64 })

define void @"0000000000000002_url_update_GD5YPDGGMyjEUj"(ptr noalias nonnull %0, %struct.ascii__String %1) {
entry:
  %local_0 = alloca ptr, align 8
  %local_1 = alloca %struct.ascii__String, align 8
  %local_2 = alloca %struct.ascii__String, align 8
  %local_3 = alloca ptr, align 8
  %local_4__url = alloca ptr, align 8
  store ptr %0, ptr %local_0, align 8
  store %struct.ascii__String %1, ptr %local_1, align 8
  %load_store_tmp = load ptr, ptr %local_0, align 8
  store ptr %load_store_tmp, ptr %local_3, align 8
  %tmp = load ptr, ptr %local_3, align 8
  %fld_ref = getelementptr inbounds %struct.url__Url, ptr %tmp, i32 0, i32 0
  store ptr %fld_ref, ptr %local_4__url, align 8
  %load_store_ref_src = load %struct.ascii__String, ptr %local_1, align 8
  %load_store_ref_dst_ptr = load ptr, ptr %local_4__url, align 8
  store %struct.ascii__String %load_store_ref_src, ptr %load_store_ref_dst_ptr, align 8
  ret void
}

declare void @move_rt_vec_destroy(ptr nonnull readonly dereferenceable(32), ptr)
